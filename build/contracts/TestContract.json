{
  "contractName": "TestContract",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTellorValues",
      "outputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_didGet",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "disputeOptimisticValue",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfValuesPerTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputedValues",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamps",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputePeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstUndisputedValueAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDisputedValueByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getIsValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "longWins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_bytesId",
          "type": "bytes32"
        }
      ],
      "name": "resultFor",
      "outputs": [
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "outcome",
          "type": "int256"
        },
        {
          "name": "status",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMyValuesByTimestamp",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        },
        {
          "name": "_disputeFeeRequired",
          "type": "uint256"
        },
        {
          "name": "_disputePeriod",
          "type": "uint256"
        },
        {
          "name": "_requestIds",
          "type": "uint256[]"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_svalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evalue",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "NewValueSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ValueDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TellorValuePlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setContractDetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "settleContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTellorValues\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_didGet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"disputeOptimisticValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getNumberOfValuesPerTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setContractDetails\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstUndisputedValueAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDisputedValueByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIsValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"longWins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_bytesId\",\"type\":\"bytes32\"}],\"name\":\"resultFor\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"outcome\",\"type\":\"int256\"},{\"name\":\"status\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMyValuesByTimestamp\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"},{\"name\":\"_disputeFeeRequired\",\"type\":\"uint256\"},{\"name\":\"_disputePeriod\",\"type\":\"uint256\"},{\"name\":\"_requestIds\",\"type\":\"uint256[]\"},{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_svalue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_evalue\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_disputer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TellorValuePlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\\r\",\"params\":{\"_requestId\":\"to tip\\r\",\"_tip\":\"amount\\r\"}},\"addTipWithEther(uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\\r at the price specified by the userContract owner.\\r\",\"params\":{\"_requestId\":\"to tip\\r\"}},\"constructor\":{\"details\":\"This constructor function is used to pass variables to the optimistic contract's constructor\\r and the function is blank\\r\",\"params\":{\"_disputeFeeRequired\":\"the fee to dispute the optimistic price(price sumbitted by known trusted party)\\r\",\"_disputePeriod\":\"is the time frame a value can be disputed after being imputed\\r\",\"_granularity\":\"is the amount of decimals desired on the requested value\\r\",\"_requestIds\":\"are the requests Id's on the Tellor System corresponding to the data types used on this contract.\\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\\r System be sure to create some.\\r\",\"_userContract\":\"address for UserContract\\r\"}},\"disputeOptimisticValue(uint256)\":{\"details\":\"allows user to initiate dispute on the value of the specified timestamp\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value to be disputed\\r\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getCurrentValue()\":{\"details\":\"Getter function for latest value available\\r\",\"return\":\"latest value available\\r\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getDisputedValueByIndex(uint256)\":{\"details\":\"Getter function for the dispute value by index\\r\",\"return\":\"the value\\r\"},\"getDisputedValues()\":{\"details\":\"Getter function for all disputed values\\r\",\"return\":\"the array with all values under dispute\\r\"},\"getFirstUndisputedValueAfter(uint256)\":{\"details\":\"Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\\r but can be used on its own.\\r\",\"params\":{\"_timestamp\":\"to search the first undisputed value there after\\r\"}},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\\r which it searched for the first verified value\\r\"},\"getIsValue(uint256)\":{\"details\":\"Checks to if a value exists for the specifived timestamp\\r\",\"params\":{\"_timestamp\":\"to verify\\r\"},\"return\":\"ture if it exists\\r\"},\"getMyValuesByTimestamp(uint256)\":{\"details\":\"Getter function for the value based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive value from\\r\"}},\"getNumberOfDisputedValues()\":{\"details\":\"Getter function for the number of disputed values\\r\",\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getNumberOfValuesPerTimestamp(uint256)\":{\"details\":\"Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive number of requestIds\\r\"},\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getRequestIds()\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r\",\"return\":\"uint array of requests Ids'\\r\"},\"getRequestIdsIncluded(uint256)\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r at the specified timestamp. This only gets populated after a dispute is initiated and the\\r function getTellorValues is ran.\\r\",\"params\":{\"_timestamp\":\"to retreive the requestIds\\r\"},\"return\":\"uint array of requests Ids' included in the calcluation of the value\\r\"},\"getTellorValues(uint256)\":{\"details\":\"This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the\\r requestsIds and replaces the value set by the contract owner, centralized party.\\r\",\"params\":{\"_timestamp\":\"to get Tellor data from\\r\"},\"return\":\"uint of new value and true if it was able to get Tellor data\\r\"},\"getTimestamps()\":{\"details\":\"Getter function for the timestamps available\\r\",\"return\":\"uint array of timestamps available\\r\"},\"isDisputed(uint256)\":{\"details\":\"This checks if the value for the specified timestamp is under dispute\\r\",\"params\":{\"_timestamp\":\"to check if it is under dispute\\r\"},\"return\":\"true if it is under dispute\\r\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes\\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\\r users will just go to an exchange and get tokens from there)\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"requestDataWithEther(string,string,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\"}},\"resultFor(bytes32)\":{\"details\":\"Allows the user to get the latest value for the requestId specified using the \\r ADO specification for the standard inteface for price oracles\\r\",\"params\":{\"_bytesId\":\"is the ADO standarized bytes32 price/key value pair identifier\\r\"},\"return\":\"the timestamp, outcome or value/ and the status code (for retreived, null, etc...)\\r\"},\"setContractDetails(uint256)\":{\"details\":\"creates a start(now) and end time(now + duration specified) for testing a contract start and end period\\r\",\"params\":{\"_duration\":\"in seconds\\r\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\\r\",\"params\":{\"_userContract\":\"address\\r\"}},\"setValue(uint256,uint256)\":{\"details\":\"allows contract owner, a centralized party to enter value\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value\\r\",\"_value\":\"is the value for the timestamp specified\\r\"}},\"settleContracts()\":{\"details\":\"testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\\r\"},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\\r\",\"params\":{\"_newOwner\":\"address\\r\"}},\"withdrawETH()\":{\"details\":\"Allows the contract owner(Tellor) to withdraw ETH from this contract\\r\"}},\"title\":\"Reader\\r This contracts is a pretend contract using Tellor that compares two time values\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol\":{\"keccak256\":\"0x5a21b757b53a2c3c01e33ea06d149681206d46b302ee3c454cdf82bd304a670a\",\"urls\":[\"bzzr://a8c720d76b88af0a6d59fcd4559f34137c021a66e8e17a9aab02e1a3d08cacd8\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/OracleIDDescriptions.sol\":{\"keccak256\":\"0x1fb9ab3720a3644aa09df138eedbc85e33912408306974ca989988d7a15ad594\",\"urls\":[\"bzzr://f61a2e49a64ddf467af985c6a30db2af9cbc9c2a57fa7566b6720956add22a07\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/UserContract.sol\":{\"keccak256\":\"0x985a1488a93c8f396bffab397a47c90f94ff81160a30b470ed872ba8324f63aa\",\"urls\":[\"bzzr://01e1b378cfc92bdc079a018bd50d80d1651552c75841415be9fa1be0bf50685e\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/UsingTellor.sol\":{\"keccak256\":\"0xe6a7293a88aae34013a4de6516a7f746863a3474d6671f71ab8150fa67ffa504\",\"urls\":[\"bzzr://12e3b224e44b376078a75af648d0467d8710b552462d8f7cec26bce29bf275a3\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/interfaces/ADOInterface.sol\":{\"keccak256\":\"0x15519cdb9554f578756a95bfde02d8b054030cf9af7817d15e238f4cc67b9b13\",\"urls\":[\"bzzr://8639e456720416cefba5b0f0be290485251fb45ab467c7f6c548b7ff8f9ea039\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x62b9162f069143cfced67a222b466d7635f16dff23357c8ebdf83f133a94d38e\",\"urls\":[\"bzzr://573395652f31cb705d2ade016c073fda6bedde50a5843820c809befe7295ef6a\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x75a75c865e03d482a5e23d2f5fcdeb4759f271404d320b96ec0f5e712907bab5\",\"urls\":[\"bzzr://1152047300729b5719e6f4ea607844edff7e8353be9fd94e1d10468d3a9f8ed6\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x6d718b9e38862b3db845019511f8b272af3cc2d209112f35ebc944d10eec5649\",\"urls\":[\"bzzr://3b52937a5615f2ea5a43b82a357b90b698863d1736a45d26df26703235237b39\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x54607e8b302ce32f7311be680dbcfdbb6d1054d5091f47bcc0544237b42d483c\",\"urls\":[\"bzzr://263f2237829b260b0694f973f229781be7e1e09e30617b40e88959736f7b0f2a\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0xb9ad394b89a6314b8b8c1e331fcde96f85635a1428b7c79848a9b39d5879cbe4\",\"urls\":[\"bzzr://5c84c97c0b0fd4b9577ff0e3377335675f84e7febe01e387afdb54ef9c2a3b08\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x70653719f7deda44ce81106e687ad70e56c09c70146e8e70d7ec732f83ba0d6a\",\"urls\":[\"bzzr://0b7a6090a7dd244e28ee3ca27043a88b501854eb17eadc97f1551ff84e2c7202\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/Tellor.sol\":{\"keccak256\":\"0x0ea7a45c630f926c984369a983d50c08402bf6459195b55b2a26e84593a049f6\",\"urls\":[\"bzzr://ea78aa40b4b84fd4fe239e6f68bd1540ccd0e2322996fbd218c9de49bddb5e5c\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TellorGetters.sol\":{\"keccak256\":\"0x76372d6015a05a421072354443b990a3973b5e8377023b9925ea85b7f686f008\",\"urls\":[\"bzzr://ca7e23cafb6c14fc4230de2c65d711ad7987d667362633269feec799fd6806ee\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TellorMaster.sol\":{\"keccak256\":\"0x40bef5591065126b3caffae521d576d6f0952c286d329e6179f53e17d83f817d\",\"urls\":[\"bzzr://ec55bcea631a5495c110775eee3bf8e028d6a2f987b26bd2c59504b98ec9b8c7\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol\":{\"keccak256\":\"0x9e0c022cf14b7475d9dda8111331fda2d7c65de72469a5cdb9dff81d58f2960d\",\"urls\":[\"bzzr://75277656743ab1fcb446c87861903376f3056e296710d6309b0340911e8291dd\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200317038038062003170833981018060405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080516401000000008111156200006e57600080fd5b828101905060208101848111156200008557600080fd5b8151856020820283011164010000000082111715620000a357600080fd5b505092919060200180519060200190929190505050848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600a8190555082600b819055508060098190555081600790805190602001906200016d9291906200017e565b5050505050505050505050620001f8565b828054828255906000526020600020908101928215620001bd579160200282015b82811115620001bc5782518255916020019190600101906200019f565b5b509050620001cc9190620001d0565b5090565b620001f591905b80821115620001f1576000816000905550600101620001d7565b5090565b90565b612f6880620002086000396000f3fe6080604052600436106102465760003560e01c806371d8dd1911610139578063ac33a273116100b6578063d09cc57e1161007a578063d09cc57e14610de9578063d269a83c14610e46578063dc7ebf0e14610eb1578063e086e5ec14610f41578063e631def714610f58578063f2fde38b14610fa757610246565b8063ac33a27314610b5b578063b63f210a14610bc7578063b9ce896b14610c33578063bad4d21e14610c5e578063bb19e29614610c8d57610246565b806387105801116100fd5780638710580114610a1a5780638da5cb5b14610a3157806391bf116f14610a885780639a64f07014610ab7578063a1206d4e14610b0a57610246565b806371d8dd19146108c3578063752d49a114610912578063775f75df146109575780637b8d56e3146109825780637ccc586e146109c757610246565b80633f35ff32116101c757806359abbfe41161018b57806359abbfe4146107355780635bf31d4d146107a15780635f059f3e146107cc578063681012e51461083757806369949a861461086257610246565b80633f35ff32146104b25780633fcad964146104dd5780633fff28161461053e578063550921d4146106b1578063556f0dc71461070a57610246565b80632aa0bc1f1161020e5780632aa0bc1f1461035757806331562d69146103a657806336e9d632146103e157806337ae9e43146104345780633c9177cd1461048757610246565b8063062777ff1461024b5780630f76c114146102a557806316e72abb146102d05780632639e0b0146102fb578063292b8cce14610329575b600080fd5b34801561025757600080fd5b506102846004803603602081101561026e57600080fd5b8101908080359060200190929190505050610ff8565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102b157600080fd5b506102ba6115af565b6040518082815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5611658565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061165e565b005b6103556004803603602081101561033f57600080fd5b81019080803590602001909291905050506116ee565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b8101908080359060200190929190505050611944565b6040518082815260200191505060405180910390f35b3480156103b257600080fd5b506103df600480360360208110156103c957600080fd5b8101908080359060200190929190505050611964565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050611991565b604051808215151515815260200191505060405180910390f35b34801561044057600080fd5b5061046d6004803603602081101561045757600080fd5b81019080803590602001909291905050506119b1565b604051808215151515815260200191505060405180910390f35b34801561049357600080fd5b5061049c6119d1565b6040518082815260200191505060405180910390f35b3480156104be57600080fd5b506104c76119d7565b6040518082815260200191505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b81019080803590602001909291905050506119dd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561054a57600080fd5b506106af6004803603608081101561056157600080fd5b810190808035906020019064010000000081111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111640100000000831117156105b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611ab0565b005b3480156106bd57600080fd5b506106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611e1c565b6040518082815260200191505060405180910390f35b34801561071657600080fd5b5061071f611e4a565b6040518082815260200191505060405180910390f35b34801561074157600080fd5b5061074a611e50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561078d578082015181840152602081019050610772565b505050509050019250505060405180910390f35b3480156107ad57600080fd5b506107b6611ea8565b6040518082815260200191505060405180910390f35b3480156107d857600080fd5b5061080f600480360360408110156107ef57600080fd5b810190808035906020019092919080359060200190929190505050611eae565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561084357600080fd5b5061084c611f89565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b5061089b6004803603602081101561088557600080fd5b8101908080359060200190929190505050611f96565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108cf57600080fd5b506108fc600480360360208110156108e657600080fd5b8101908080359060200190929190505050612092565b6040518082815260200191505060405180910390f35b34801561091e57600080fd5b506109556004803603604081101561093557600080fd5b8101908080359060200190929190803590602001909291905050506120b3565b005b34801561096357600080fd5b5061096c612339565b6040518082815260200191505060405180910390f35b34801561098e57600080fd5b506109c5600480360360408110156109a557600080fd5b81019080803590602001909291908035906020019092919050505061233f565b005b3480156109d357600080fd5b50610a00600480360360208110156109ea57600080fd5b8101908080359060200190929190505050612530565b604051808215151515815260200191505060405180910390f35b348015610a2657600080fd5b50610a2f61255a565b005b348015610a3d57600080fd5b50610a4661262f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9457600080fd5b50610a9d612655565b604051808215151515815260200191505060405180910390f35b348015610ac357600080fd5b50610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050612668565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b5960048036036020811015610b2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612692565b005b348015610b6757600080fd5b50610b70612798565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bb3578082015181840152602081019050610b98565b505050509050019250505060405180910390f35b348015610bd357600080fd5b50610bdc6127f0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c1f578082015181840152602081019050610c04565b505050509050019250505060405180910390f35b348015610c3f57600080fd5b50610c48612848565b6040518082815260200191505060405180910390f35b348015610c6a57600080fd5b50610c7361284e565b604051808215151515815260200191505060405180910390f35b610de760048036036060811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612861565b005b348015610df557600080fd5b50610e2260048036036020811015610e0c57600080fd5b81019080803590602001909291905050506129cd565b60405180848152602001838152602001828152602001935050505060405180910390f35b348015610e5257600080fd5b50610e8960048036036040811015610e6957600080fd5b810190808035906020019092919080359060200190929190505050612aa0565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610ebd57600080fd5b50610eea60048036036020811015610ed457600080fd5b8101908080359060200190929190505050612b7b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610f2d578082015181840152602081019050610f12565b505050509050019250505060405180910390f35b348015610f4d57600080fd5b50610f56612be6565b005b348015610f6457600080fd5b50610f9160048036036020811015610f7b57600080fd5b8101908080359060200190929190505050612d2b565b6040518082815260200191505060405180910390f35b348015610fb357600080fd5b50610ff660048036036020811015610fca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d48565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561106457600080fd5b505afa158015611078573d6000803e3d6000fd5b505050506040513d602081101561108e57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d602081101561113457600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b810190808051906020019092919050505090506000600190505b60078054905081116115a5576112218189611eae565b8095508199508298505050508515611451576000600954848161124057fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161129657fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156113ef57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a261144a565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156114495760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611598565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d60208110156114fe57600080fd5b81019080805190602001909291905050501115611597578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161154057fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050505b5b808060010191505061120b565b5050505050915091565b6000806006805490501161162b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b61165360066001600680549050038154811061164357fe5b9060005260206000200154612d2b565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b1580156116d257600080fd5b505af11580156116e6573d6000803e3d6000fd5b505050505050565b600a54341015611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166117dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f096034913960400191505060405180910390fd5b600b54810160095442816117ec57fe5b0642031115611863576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161196f57fe5b064203600c8190555080600954428161198457fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015611a5457600080fd5b505afa158015611a68573d6000803e3d6000fd5b505050506040513d6060811015611a7e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1957600080fd5b505afa158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b810190808051906020019092919050505090506000821115611cc8578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c1a57600080fd5b505af1158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b8101908080519060200190929190505050611cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff2816868686866040518563ffffffff1660e01b8152600401808060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015611d47578082015181840152602081019050611d2c565b50505050905090810190601f168015611d745780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015611dad578082015181840152602081019050611d92565b50505050905090810190601f168015611dda5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b505050505050505050565b60056020528160005260406000208181548110611e3557fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611e9e57602002820191906000526020600020905b815481526020019060010190808311611e8a575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611f2d57600080fd5b505afa158015611f41573d6000803e3d6000fd5b505050506040513d6060811015611f5757600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b600080600080600680549050905060008111156120785760008190505b6000811115612055578560066001830381548110611fcd57fe5b9060005260206000200154101580156120245750600015156004600060066001850381548110611ff957fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15612047576006600182038154811061203957fe5b906000526020600020015492505b808060019003915050611fb3565b50600082111561207757600161206a83612d2b565b839350935093505061208b565b5b6000806000819150809050935093509350505b9193909250565b6000600882815481106120a157fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561211c57600080fd5b505afa158015612130573d6000803e3d6000fd5b505050506040513d602081101561214657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d602081101561223e57600080fd5b81019080805190602001909291905050506122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561231c57600080fd5b505af1158015612330573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561240f83612668565b151514612484576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612568600c54611f96565b600e60008295508391905055829450505050811561262b5761258b600d54611f96565b600f60008295508391905055829450505050811561262a57600e54600f5411156125cb576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612755576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156127e657602002820191906000526020600020905b8154815260200190600101908083116127d2575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561283e57602002820191906000526020600020905b81548152602001906001019080831161282a575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb19e296348585856040518563ffffffff1660e01b8152600401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156128fb5780820151818401526020810190506128e0565b50505050905090810190601f1680156129285780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612961578082015181840152602081019050612946565b50505050905090810190601f16801561298e5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303818588803b1580156129af57600080fd5b505af11580156129c3573d6000803e3d6000fd5b5050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09cc57e856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015612a4457600080fd5b505afa158015612a58573d6000803e3d6000fd5b505050506040513d6060811015612a6e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015612b1f57600080fd5b505afa158015612b33573d6000803e3d6000fd5b505050506040513d6060811015612b4957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612bda57602002820191906000526020600020905b815481526020019060010190808311612bc6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ca9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612d28573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a165627a7a72305820c7ed57d6b7a8334a1fb29ecdd85df674bf60e6b01e33f005bc11bf4ec0c24c880029",
  "deployedBytecode": "0x6080604052600436106102465760003560e01c806371d8dd1911610139578063ac33a273116100b6578063d09cc57e1161007a578063d09cc57e14610de9578063d269a83c14610e46578063dc7ebf0e14610eb1578063e086e5ec14610f41578063e631def714610f58578063f2fde38b14610fa757610246565b8063ac33a27314610b5b578063b63f210a14610bc7578063b9ce896b14610c33578063bad4d21e14610c5e578063bb19e29614610c8d57610246565b806387105801116100fd5780638710580114610a1a5780638da5cb5b14610a3157806391bf116f14610a885780639a64f07014610ab7578063a1206d4e14610b0a57610246565b806371d8dd19146108c3578063752d49a114610912578063775f75df146109575780637b8d56e3146109825780637ccc586e146109c757610246565b80633f35ff32116101c757806359abbfe41161018b57806359abbfe4146107355780635bf31d4d146107a15780635f059f3e146107cc578063681012e51461083757806369949a861461086257610246565b80633f35ff32146104b25780633fcad964146104dd5780633fff28161461053e578063550921d4146106b1578063556f0dc71461070a57610246565b80632aa0bc1f1161020e5780632aa0bc1f1461035757806331562d69146103a657806336e9d632146103e157806337ae9e43146104345780633c9177cd1461048757610246565b8063062777ff1461024b5780630f76c114146102a557806316e72abb146102d05780632639e0b0146102fb578063292b8cce14610329575b600080fd5b34801561025757600080fd5b506102846004803603602081101561026e57600080fd5b8101908080359060200190929190505050610ff8565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102b157600080fd5b506102ba6115af565b6040518082815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5611658565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061165e565b005b6103556004803603602081101561033f57600080fd5b81019080803590602001909291905050506116ee565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b8101908080359060200190929190505050611944565b6040518082815260200191505060405180910390f35b3480156103b257600080fd5b506103df600480360360208110156103c957600080fd5b8101908080359060200190929190505050611964565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050611991565b604051808215151515815260200191505060405180910390f35b34801561044057600080fd5b5061046d6004803603602081101561045757600080fd5b81019080803590602001909291905050506119b1565b604051808215151515815260200191505060405180910390f35b34801561049357600080fd5b5061049c6119d1565b6040518082815260200191505060405180910390f35b3480156104be57600080fd5b506104c76119d7565b6040518082815260200191505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b81019080803590602001909291905050506119dd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561054a57600080fd5b506106af6004803603608081101561056157600080fd5b810190808035906020019064010000000081111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111640100000000831117156105b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611ab0565b005b3480156106bd57600080fd5b506106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611e1c565b6040518082815260200191505060405180910390f35b34801561071657600080fd5b5061071f611e4a565b6040518082815260200191505060405180910390f35b34801561074157600080fd5b5061074a611e50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561078d578082015181840152602081019050610772565b505050509050019250505060405180910390f35b3480156107ad57600080fd5b506107b6611ea8565b6040518082815260200191505060405180910390f35b3480156107d857600080fd5b5061080f600480360360408110156107ef57600080fd5b810190808035906020019092919080359060200190929190505050611eae565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561084357600080fd5b5061084c611f89565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b5061089b6004803603602081101561088557600080fd5b8101908080359060200190929190505050611f96565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108cf57600080fd5b506108fc600480360360208110156108e657600080fd5b8101908080359060200190929190505050612092565b6040518082815260200191505060405180910390f35b34801561091e57600080fd5b506109556004803603604081101561093557600080fd5b8101908080359060200190929190803590602001909291905050506120b3565b005b34801561096357600080fd5b5061096c612339565b6040518082815260200191505060405180910390f35b34801561098e57600080fd5b506109c5600480360360408110156109a557600080fd5b81019080803590602001909291908035906020019092919050505061233f565b005b3480156109d357600080fd5b50610a00600480360360208110156109ea57600080fd5b8101908080359060200190929190505050612530565b604051808215151515815260200191505060405180910390f35b348015610a2657600080fd5b50610a2f61255a565b005b348015610a3d57600080fd5b50610a4661262f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9457600080fd5b50610a9d612655565b604051808215151515815260200191505060405180910390f35b348015610ac357600080fd5b50610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050612668565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b5960048036036020811015610b2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612692565b005b348015610b6757600080fd5b50610b70612798565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bb3578082015181840152602081019050610b98565b505050509050019250505060405180910390f35b348015610bd357600080fd5b50610bdc6127f0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c1f578082015181840152602081019050610c04565b505050509050019250505060405180910390f35b348015610c3f57600080fd5b50610c48612848565b6040518082815260200191505060405180910390f35b348015610c6a57600080fd5b50610c7361284e565b604051808215151515815260200191505060405180910390f35b610de760048036036060811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612861565b005b348015610df557600080fd5b50610e2260048036036020811015610e0c57600080fd5b81019080803590602001909291905050506129cd565b60405180848152602001838152602001828152602001935050505060405180910390f35b348015610e5257600080fd5b50610e8960048036036040811015610e6957600080fd5b810190808035906020019092919080359060200190929190505050612aa0565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610ebd57600080fd5b50610eea60048036036020811015610ed457600080fd5b8101908080359060200190929190505050612b7b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610f2d578082015181840152602081019050610f12565b505050509050019250505060405180910390f35b348015610f4d57600080fd5b50610f56612be6565b005b348015610f6457600080fd5b50610f9160048036036020811015610f7b57600080fd5b8101908080359060200190929190505050612d2b565b6040518082815260200191505060405180910390f35b348015610fb357600080fd5b50610ff660048036036020811015610fca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d48565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561106457600080fd5b505afa158015611078573d6000803e3d6000fd5b505050506040513d602081101561108e57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d602081101561113457600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b810190808051906020019092919050505090506000600190505b60078054905081116115a5576112218189611eae565b8095508199508298505050508515611451576000600954848161124057fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161129657fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156113ef57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a261144a565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156114495760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611598565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d60208110156114fe57600080fd5b81019080805190602001909291905050501115611597578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161154057fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050505b5b808060010191505061120b565b5050505050915091565b6000806006805490501161162b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b61165360066001600680549050038154811061164357fe5b9060005260206000200154612d2b565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b1580156116d257600080fd5b505af11580156116e6573d6000803e3d6000fd5b505050505050565b600a54341015611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166117dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612f096034913960400191505060405180910390fd5b600b54810160095442816117ec57fe5b0642031115611863576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161196f57fe5b064203600c8190555080600954428161198457fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015611a5457600080fd5b505afa158015611a68573d6000803e3d6000fd5b505050506040513d6060811015611a7e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1957600080fd5b505afa158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b810190808051906020019092919050505090506000821115611cc8578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c1a57600080fd5b505af1158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b8101908080519060200190929190505050611cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff2816868686866040518563ffffffff1660e01b8152600401808060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015611d47578082015181840152602081019050611d2c565b50505050905090810190601f168015611d745780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015611dad578082015181840152602081019050611d92565b50505050905090810190601f168015611dda5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b505050505050505050565b60056020528160005260406000208181548110611e3557fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611e9e57602002820191906000526020600020905b815481526020019060010190808311611e8a575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611f2d57600080fd5b505afa158015611f41573d6000803e3d6000fd5b505050506040513d6060811015611f5757600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b600080600080600680549050905060008111156120785760008190505b6000811115612055578560066001830381548110611fcd57fe5b9060005260206000200154101580156120245750600015156004600060066001850381548110611ff957fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15612047576006600182038154811061203957fe5b906000526020600020015492505b808060019003915050611fb3565b50600082111561207757600161206a83612d2b565b839350935093505061208b565b5b6000806000819150809050935093509350505b9193909250565b6000600882815481106120a157fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561211c57600080fd5b505afa158015612130573d6000803e3d6000fd5b505050506040513d602081101561214657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d602081101561223e57600080fd5b81019080805190602001909291905050506122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561231c57600080fd5b505af1158015612330573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561240f83612668565b151514612484576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612568600c54611f96565b600e60008295508391905055829450505050811561262b5761258b600d54611f96565b600f60008295508391905055829450505050811561262a57600e54600f5411156125cb576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612755576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156127e657602002820191906000526020600020905b8154815260200190600101908083116127d2575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561283e57602002820191906000526020600020905b81548152602001906001019080831161282a575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb19e296348585856040518563ffffffff1660e01b8152600401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156128fb5780820151818401526020810190506128e0565b50505050905090810190601f1680156129285780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612961578082015181840152602081019050612946565b50505050905090810190601f16801561298e5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303818588803b1580156129af57600080fd5b505af11580156129c3573d6000803e3d6000fd5b5050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09cc57e856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015612a4457600080fd5b505afa158015612a58573d6000803e3d6000fd5b505050506040513d6060811015612a6e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015612b1f57600080fd5b505afa158015612b33573d6000803e3d6000fd5b505050506040513d6060811015612b4957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612bda57602002820191906000526020600020905b815481526020019060010190808311612bc6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ca9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612d28573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a165627a7a72305820c7ed57d6b7a8334a1fb29ecdd85df674bf60e6b01e33f005bc11bf4ec0c24c880029",
  "sourceMap": "165:2483:16:-;;;1242:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:262:16;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1242:262:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;1242:262:16;;;;;;;;;;;;;;;;;1418:13;1433:19;1454:14;1470:11;1483:12;2642:13:1;767::4;733:18;;:48;;;;;;;;;;;;;;;;;;800:10;792:5;;:18;;;;;;;;;;;;;;;;;;680:138;2686:19:1;2673:10;:32;;;;2732:14;2716:13;:30;;;;2771:12;2757:11;:26;;;;2807:11;2794:10;:24;;;;;;;;;;;;:::i;:::-;;2465:361;;;;;1242:262:16;;;;;165:2483;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "165:2483:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5077:2995:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5077:2995:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5077:2995:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10376:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10376:210:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;308:23:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:23:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5442:156:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5442:156:4;;;;;;;;;;;;;;;;;:::i;:::-;;3937:784:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3937:784:1;;;;;;;;;;;;;;;;;:::i;:::-;;9830:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9830:154:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9830:154:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1680:178:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1680:178:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1680:178:16;;;;;;;;;;;;;;;;;:::i;:::-;;399:39:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:39:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;399:39:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;602:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:46:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;602:46:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;243:26:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:26:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;276:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:25:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1106:199:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:199:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1106:199:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3815:397;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3815:397:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3815:397:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3815:397:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3815:397:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3815:397:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3815:397:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3815:397:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3815:397:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3815:397:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3815:397:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;732:55:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:55:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;732:55:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1244:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1244:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10718:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10718:102:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10718:102:1;;;;;;;;;;;;;;;;;1323:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2288:234:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2288:234:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2288:234:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11785:121:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11785:121:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8594:652;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8594:652:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8594:652:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12590:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12590:134:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12590:134:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4935:277:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4935:277:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4935:277:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;208:28:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;208:28:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3058:699:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3058:699:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3058:699:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12360:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12360:121:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12360:121:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2103:542:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2103:542:16;;;:::i;:::-;;400:28:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:28:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;365:25:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:25:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10146:112:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10146:112:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10146:112:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5717:206:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5717:206:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5717:206:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;10982:102:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10982:102:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10982:102:1;;;;;;;;;;;;;;;;;12038:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12038:115:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12038:115:1;;;;;;;;;;;;;;;;;1277:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1277:25:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;338:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:20:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4547:222:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4547:222:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4547:222:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4547:222:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4547:222:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4547:222:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4547:222:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4547:222:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4547:222:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4547:222:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1674:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1674:170:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1674:170:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2882:265:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2882:265:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11476:148:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11476:148:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11476:148:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11476:148:1;;;;;;;;;;;;;;;;;8178:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8178:159:1;;;:::i;:::-;;9411:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9411:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9411:143:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6027:215:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6027:215:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6027:215:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;5077:2995:1;5138:14;5154:12;5397:20;5433:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5433:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5433:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5433:41:1;;;;;;;;;;;;;;;;5397:78;;5486:18;5514;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5514:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5514:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5514:41:1;;;;;;;;;;;;;;;;5486:70;;5567:27;5605:23;5631:7;:17;;;5657:4;5631:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5631:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5631:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5631:32:1;;;;;;;;;;;;;;;;5605:58;;5854:9;5866:1;5854:13;;5849:2216;5874:10;:17;;;;5869:1;:22;5849:2216;;6143:40;6169:1;6172:10;6143:25;:40::i;:::-;6102:81;;;;;;;;;;;;6202:7;6198:1856;;;6230:16;6294:11;;6272:19;:33;;;;;;6249:19;:57;6230:76;;6460:17;6619:1;6581:18;:28;6600:8;6581:28;;;;;;;;;;;:35;;;;:39;6520:18;:28;6539:8;6520:28;;;;;;;;;;;:35;;;;6490:17;:27;6508:8;6490:27;;;;;;;;;;;;:65;6481:6;:74;6480:141;;;;;;6460:161;;6743:9;6713:17;:27;6731:8;6713:27;;;;;;;;;;;:39;;;;6776:38;6794:8;6804:9;6776:38;;;;;;;;;;;;;;;;;;;;;;;;6954:18;:28;6973:8;6954:28;;;;;;;;;;;6988:1;6954:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6954:36:1;;;;;;;;;;;;;;;;;;;;;;7344:5;7323:26;;:7;:17;7331:8;7323:17;;;;;;;;;;;;;;;;;;;;;:26;;;7319:323;;;7374:10;7390:8;7374:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7374:25:1;;;;;;;;;;;;;;;;;;;;;;7442:4;7422:7;:17;7430:8;7422:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;7486:8;7474:29;7496:6;7474:29;;;;;;;;;;;;;;;;;;7319:323;;;7561:4;7533:32;;:14;:24;7548:8;7533:24;;;;;;;;;;;;;;;;;;;;;:32;;;7529:113;;;7617:5;7590:14;:24;7605:8;7590:24;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;7529:113;7319:323;6198:1856;;;;;7878:10;:17;;;;7843:7;:17;;;7869:4;7843:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7843:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7843:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7843:32:1;;;;;;;;;;;;;;;;:52;7839:215;;;7980:11;:18;;;7999:1;8020:10;:17;;;;8002:15;:35;;;;;;7980:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7980:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7980:58:1;;;;7839:215;6198:1856;5893:3;;;;;;;5849:2216;;;;5077:2995;;;;;;;:::o;10376:210::-;10426:7;10474:1;10454:10;:17;;;;:21;10446:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10521;10544:10;10575:1;10555:10;:17;;;;:21;10544:33;;;;;;;;;;;;;;;;10521:22;:57::i;:::-;10514:64;;10376:210;:::o;308:23:16:-;;;;:::o;5442:156:4:-;5526:18;;;;;;;;;;;5513:48;;;5568:9;5579:10;5513:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5513:77:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5513:77:4;;;;;5442:156;:::o;3937:784:1:-;4038:10;;4025:9;:23;;4017:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4180:7;:19;4188:10;4180:19;;;;;;;;;;;;;;;;;;;;;4172:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4364:13;;4351:10;:26;4335:11;;4329:3;:17;;;;;;4322:3;:25;:55;;4314:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4513:4;4484:14;:26;4499:10;4484:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4593:19;4618:10;4593:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4593:36:1;;;;;;;;;;;;;;;;;;;;;;4645:68;4659:10;4671;4683:17;:29;4701:10;4683:29;;;;;;;;;;;;4645:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3937:784;:::o;9830:154::-;9912:7;9939:18;:30;9958:10;9939:30;;;;;;;;;;;:37;;;;9932:44;;9830:154;;;:::o;1680:178:16:-;1776:11;;1770:3;:17;;;;;;1763:3;:25;1747:13;:41;;;;1841:9;1826:11;;1820:3;:17;;;;;;1813:3;:25;:37;1799:11;:51;;;;1680:178;:::o;399:39:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;602:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;243:26:16:-;;;;:::o;276:25::-;;;;:::o;1106:199:4:-;1172:15;1189:13;1204:27;1251:18;;;;;;;;;;;:34;;;1286:10;1251:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:46:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1251:46:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1251:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:53;;;;;;1106:199;;;;;:::o;3815:397::-;3937:14;3961:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3961:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3961:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3961:41:4;;;;;;;;;;;;;;;;3937:66;;4025:1;4018:4;:8;4014:122;;;4051:7;:20;;;4072:10;4092:4;4099;4051:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4051:53:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4051:53:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4051:53:4;;;;;;;;;;;;;;;;4043:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4014:122;4146:7;:19;;;4166:8;4176:7;4185:12;4199:4;4146:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4146:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4146:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4146:58:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4146:58:4;;;;3815:397;;;;;:::o;732:55:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1244:26::-;;;;:::o;10718:102::-;10766:16;10802:10;10795:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10718:102;:::o;1323:28::-;;;;:::o;2288:234:4:-;2384:4;2390:7;2399:27;2446:18;;;;;;;;;;;:44;;;2491:10;2503;2446:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2446:68:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2446:68:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2446:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:75;;;;;;2288:234;;;;;:::o;11785:121:1:-;11845:7;11872:19;:26;;;;11865:33;;11785:121;:::o;8594:652::-;8673:4;8679:7;8688:27;8728:14;8745:10;:17;;;;8728:34;;8786:1;8777:6;:10;8773:435;;;8809:9;8821:6;8809:18;;8804:236;8833:1;8829;:5;8804:236;;;8885:10;8864;8879:1;8875;:5;8864:17;;;;;;;;;;;;;;;;:31;;:77;;;;;8936:5;8899:42;;:14;:33;8914:10;8929:1;8925;:5;8914:17;;;;;;;;;;;;;;;;8899:33;;;;;;;;;;;;;;;;;;;;;:42;;;8864:77;8860:165;;;8988:10;9003:1;8999;:5;8988:17;;;;;;;;;;;;;;;;8966:39;;8860:165;8836:3;;;;;;;;8804:236;;;;9080:1;9058:19;:23;9054:143;;;9110:4;9116:43;9139:19;9116:22;:43::i;:::-;9161:19;9102:79;;;;;;;;;9054:143;8773:435;9226:5;9233:1;9236;9218:20;;;;;;;;;;;;;8594:652;;;;;;:::o;12590:134::-;12662:7;12689:19;12709:6;12689:27;;;;;;;;;;;;;;;;12682:34;;12590:134;;;:::o;4935:277:4:-;5003:14;5027:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5027:41:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5027:41:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5027:41:4;;;;;;;;;;;;;;;;5003:66;;5088:7;:20;;;5109:10;5129:4;5136;5088:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5088:53:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5088:53:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5088:53:4;;;;;;;;;;;;;;;;5080:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5172:7;:14;;;5187:10;5199:4;5172:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5172:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5172:32:4;;;;4935:277;;;:::o;208:28:16:-;;;;:::o;3058:699:1:-;3196:5;;;;;;;;;;;3182:19;;:10;:19;;;3174:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:5;3315:31;;:22;3326:10;3315;:22::i;:::-;:31;;;3307:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3444:6;3412:17;:29;3430:10;3412:29;;;;;;;;;;;:38;;;;3533:4;3511:7;:19;3519:10;3511:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3598:10;3614;3598:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3598:27:1;;;;;;;;;;;;;;;;;;;;;;3728:10;3716:31;3740:6;3716:31;;;;;;;;;;;;;;;;;;3058:699;;:::o;12360:121::-;12423:4;12447:14;:26;12462:10;12447:26;;;;;;;;;;;;;;;;;;;;;12440:33;;12360:121;;;:::o;2103:542:16:-;2150:12;2173:13;2228:43;2257:13;;2228:28;:43::i;:::-;2207:10;;2197:74;;;;;;;;;;;;;;2286:7;2282:356;;;2339:41;2368:11;;2339:28;:41::i;:::-;2320:8;;2310:70;;;;;;;;;;;;;;2399:7;2395:232;;;2442:10;;2431:8;;:21;2427:85;;;2488:4;2477:8;;:15;;;;;;;;;;;;;;;;;;2427:85;2546:4;2530:13;;:20;;;;;;;;;;;;;;;;;;2574:37;2590:10;;2602:8;;2574:37;;;;;;;;;;;;;;;;;;;;;;;;2395:232;2282:356;2103:542;;:::o;400:28:4:-;;;;;;;;;;;;;:::o;365:25:16:-;;;;;;;;;;;;;:::o;10146:112:1:-;10207:4;10231:7;:19;10239:10;10231:19;;;;;;;;;;;;;;;;;;;;;10224:26;;10146:112;;;:::o;5717:206:4:-;5805:5;;;;;;;;;;;5791:19;;:10;:19;;;5783:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5901:13;5867:18;;:48;;;;;;;;;;;;;;;;;;5717:206;:::o;10982:102:1:-;11030:16;11066:10;11059:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10982:102;:::o;12038:115::-;12090:16;12126:19;12119:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12038:115;:::o;1277:25::-;;;;:::o;338:20:16:-;;;;;;;;;;;;;:::o;4547:222:4:-;4672:18;;;;;;;;;;;:39;;;4718:9;4729:8;4739:7;4748:12;4672:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4672:89:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4672:89:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4672:89:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4672:89:4;;;;;4547:222;;;:::o;1674:170::-;1732:17;1750:14;1766:13;1798:18;;;;;;;;;;;:28;;;1827:8;1798:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1798:38:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1798:38:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1798:38:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:45;;;;;;1674:170;;;;;:::o;2882:265::-;2995:16;3013:14;3029:27;3081:18;;;;;;;;;;;:34;;;3116:10;3128;3081:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3081:58:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3081:58:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3081:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:65;;;;;;2882:265;;;;;:::o;11476:148:1:-;11550:16;11586:18;:30;11605:10;11586:30;;;;;;;;;;;11579:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11476:148;;;:::o;8178:159::-;8243:5;;;;;;;;;;;8229:19;;:10;:19;;;8221:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8291:5;;;;;;;;;;;8283:23;;:46;8315:4;8307:21;;;8283:46;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8283:46:1;8178:159::o;9411:143::-;9484:13;9517:17;:29;9535:10;9517:29;;;;;;;;;;;;9510:36;;9411:143;;;:::o;6027:215:4:-;6123:5;;;;;;;;;;;6109:19;;:10;:19;;;6101:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6168:38;6189:5;;;;;;;;;;;6196:9;6168:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6225:9;6217:5;;:17;;;;;;;;;;;;;;;;;;6027:215;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../Optimistic.sol\";\r\n/**\r\n* @title Reader\r\n* This contracts is a pretend contract using Tellor that compares two time values\r\n*/\r\ncontract TestContract is Optimistic {\r\n    uint256 public startDateTime;\r\n    uint256 public endDateTime;\r\n    uint256 public startValue;\r\n    uint256 public endValue;\r\n    bool public longWins;\r\n    bool public contractEnded;\r\n    event ContractSettled(uint256 _svalue, uint256 _evalue);\r\n    /**\r\n    * @dev This constructor function is used to pass variables to the optimistic contract's constructor\r\n    * and the function is blank\r\n    * @param _userContract address for UserContract\r\n    * @param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n    * @param _disputePeriod is the time frame a value can be disputed after being imputed\r\n    * @param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\n    * It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\n    * System be sure to create some.\r\n    * @param _granularity is the amount of decimals desired on the requested value\r\n    */\r\n    constructor(address _userContract, uint256 _disputeFeeRequired, uint256 _disputePeriod, uint256[] memory _requestIds, uint256 _granularity)\r\n        public\r\n        Optimistic(_userContract, _disputeFeeRequired, _disputePeriod, _requestIds, _granularity)\r\n    {}\r\n\r\n    /**\r\n    * @dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n    * @param _duration in seconds\r\n    */\r\n    function setContractDetails(uint256 _duration) external {\r\n        startDateTime = now - (now % granularity);\r\n        endDateTime = now - (now % granularity) + _duration;\r\n    }\r\n\r\n    /**\r\n    * @dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\n    * and the first undisputed value after the end time of the contract and settleling(payin off) it.\r\n    */\r\n    function settleContracts() external {\r\n        bool _didGet;\r\n        uint256 _time;\r\n        (_didGet, startValue, _time) = getFirstUndisputedValueAfter(startDateTime);\r\n        if (_didGet) {\r\n            (_didGet, endValue, _time) = getFirstUndisputedValueAfter(endDateTime);\r\n            if (_didGet) {\r\n                if (endValue > startValue) {\r\n                    longWins = true;\r\n                }\r\n                contractEnded = true;\r\n                emit ContractSettled(startValue, endValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
  "ast": {
    "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4869
      ]
    },
    "id": 4870,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4747,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4748,
        "nodeType": "ImportDirective",
        "scope": 4870,
        "sourceUnit": 657,
        "src": "27:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4749,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "190:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$656",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4750,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:16"
          }
        ],
        "contractDependencies": [
          656,
          1653,
          1667
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 4869,
        "linearizedBaseContracts": [
          4869,
          656,
          1653,
          1667
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4752,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "208:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4751,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4754,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "243:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4756,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "276:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4758,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "308:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4757,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4760,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "338:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4759,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "338:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4762,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "365:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4768,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4764,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "419:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4766,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "436:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:34:16"
            },
            "src": "397:56:16"
          },
          {
            "body": {
              "id": 4789,
              "nodeType": "Block",
              "src": "1502:2:16",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 4790,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4782,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4770,
                    "src": "1418:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4783,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4772,
                    "src": "1433:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4784,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4774,
                    "src": "1454:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4785,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4777,
                    "src": "1470:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4786,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4779,
                    "src": "1483:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4787,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4781,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 656,
                  "src": "1407:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$656_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:89:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1254:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4772,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1277:27:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1306:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4777,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1330:28:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4775,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1330:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4776,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1330:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4779,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1360:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:128:16"
            },
            "returnParameters": {
              "id": 4788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:16"
            },
            "scope": 4869,
            "src": "1242:262:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4815,
              "nodeType": "Block",
              "src": "1736:122:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4795,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4752,
                      "src": "1747:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4796,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4886,
                        "src": "1763:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4797,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4886,
                              "src": "1770:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4798,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1776:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1770:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4800,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1769:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1763:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1747:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4803,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:41:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4804,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4754,
                      "src": "1799:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4805,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "1813:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4806,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4886,
                                "src": "1820:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4807,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1826:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1820:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4809,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1819:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1813:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4811,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4792,
                        "src": "1841:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1799:51:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4814,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:51:16"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 4816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4792,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4816,
                  "src": "1708:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1707:19:16"
            },
            "returnParameters": {
              "id": 4794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:16"
            },
            "scope": 4869,
            "src": "1680:178:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4867,
              "nodeType": "Block",
              "src": "2139:506:16",
              "statements": [
                {
                  "assignments": [
                    4820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4820,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4867,
                      "src": "2150:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4819,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2150:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4821,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:12:16"
                },
                {
                  "assignments": [
                    4823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4823,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4867,
                      "src": "2173:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4824,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2173:13:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4825,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "2198:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4826,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4756,
                          "src": "2207:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4827,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4823,
                          "src": "2219:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4828,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2197:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4830,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4752,
                          "src": "2257:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4829,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2228:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2228:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2197:74:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4833,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:74:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4834,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4820,
                    "src": "2286:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4866,
                  "nodeType": "IfStatement",
                  "src": "2282:356:16",
                  "trueBody": {
                    "id": 4865,
                    "nodeType": "Block",
                    "src": "2295:343:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4835,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4820,
                                "src": "2311:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4836,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4758,
                                "src": "2320:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4837,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4823,
                                "src": "2330:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4838,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2310:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4840,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4754,
                                "src": "2368:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4839,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2339:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2339:41:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2310:70:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4843,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:70:16"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4844,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "2399:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4864,
                        "nodeType": "IfStatement",
                        "src": "2395:232:16",
                        "trueBody": {
                          "id": 4863,
                          "nodeType": "Block",
                          "src": "2408:219:16",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4845,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4758,
                                  "src": "2431:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4846,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4756,
                                  "src": "2442:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2431:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4853,
                              "nodeType": "IfStatement",
                              "src": "2427:85:16",
                              "trueBody": {
                                "id": 4852,
                                "nodeType": "Block",
                                "src": "2454:58:16",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4848,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4760,
                                        "src": "2477:8:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2488:4:16",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2477:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4851,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2477:15:16"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4854,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4762,
                                  "src": "2530:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2546:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2530:20:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4857,
                              "nodeType": "ExpressionStatement",
                              "src": "2530:20:16"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4859,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4756,
                                    "src": "2590:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4860,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4758,
                                    "src": "2602:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4858,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4768,
                                  "src": "2574:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2574:37:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4862,
                              "nodeType": "EmitStatement",
                              "src": "2569:42:16"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 4868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:16"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:16"
            },
            "scope": 4869,
            "src": "2103:542:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4870,
        "src": "165:2483:16"
      }
    ],
    "src": "0:2650:16"
  },
  "legacyAST": {
    "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4869
      ]
    },
    "id": 4870,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4747,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4748,
        "nodeType": "ImportDirective",
        "scope": 4870,
        "sourceUnit": 657,
        "src": "27:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4749,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "190:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$656",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4750,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:16"
          }
        ],
        "contractDependencies": [
          656,
          1653,
          1667
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 4869,
        "linearizedBaseContracts": [
          4869,
          656,
          1653,
          1667
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4752,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "208:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4751,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4754,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "243:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4753,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4756,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "276:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4758,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "308:23:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4757,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4760,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "338:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4759,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "338:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4762,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4869,
            "src": "365:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4768,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4764,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "419:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4766,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4768,
                  "src": "436:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:34:16"
            },
            "src": "397:56:16"
          },
          {
            "body": {
              "id": 4789,
              "nodeType": "Block",
              "src": "1502:2:16",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 4790,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4782,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4770,
                    "src": "1418:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4783,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4772,
                    "src": "1433:19:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4784,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4774,
                    "src": "1454:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4785,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4777,
                    "src": "1470:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4786,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4779,
                    "src": "1483:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4787,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4781,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 656,
                  "src": "1407:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$656_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:89:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4770,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1254:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4772,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1277:27:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4774,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1306:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4777,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1330:28:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4775,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1330:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4776,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1330:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4779,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4790,
                  "src": "1360:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:128:16"
            },
            "returnParameters": {
              "id": 4788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:16"
            },
            "scope": 4869,
            "src": "1242:262:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4815,
              "nodeType": "Block",
              "src": "1736:122:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4795,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4752,
                      "src": "1747:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4796,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4886,
                        "src": "1763:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4797,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4886,
                              "src": "1770:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4798,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1776:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1770:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4800,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1769:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1763:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1747:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4803,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:41:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4804,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4754,
                      "src": "1799:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4805,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4886,
                          "src": "1813:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4806,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4886,
                                "src": "1820:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4807,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1826:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1820:17:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4809,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1819:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1813:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4811,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4792,
                        "src": "1841:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1799:51:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4814,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:51:16"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 4816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4792,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4816,
                  "src": "1708:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1707:19:16"
            },
            "returnParameters": {
              "id": 4794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:16"
            },
            "scope": 4869,
            "src": "1680:178:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4867,
              "nodeType": "Block",
              "src": "2139:506:16",
              "statements": [
                {
                  "assignments": [
                    4820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4820,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4867,
                      "src": "2150:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4819,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2150:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4821,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:12:16"
                },
                {
                  "assignments": [
                    4823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4823,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4867,
                      "src": "2173:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4824,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2173:13:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4825,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "2198:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4826,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4756,
                          "src": "2207:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4827,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4823,
                          "src": "2219:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4828,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2197:28:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4830,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4752,
                          "src": "2257:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4829,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2228:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2228:43:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2197:74:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4833,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:74:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4834,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4820,
                    "src": "2286:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4866,
                  "nodeType": "IfStatement",
                  "src": "2282:356:16",
                  "trueBody": {
                    "id": 4865,
                    "nodeType": "Block",
                    "src": "2295:343:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4835,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4820,
                                "src": "2311:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4836,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4758,
                                "src": "2320:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4837,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4823,
                                "src": "2330:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4838,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2310:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4840,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4754,
                                "src": "2368:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4839,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2339:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2339:41:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2310:70:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4843,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:70:16"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4844,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4820,
                          "src": "2399:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4864,
                        "nodeType": "IfStatement",
                        "src": "2395:232:16",
                        "trueBody": {
                          "id": 4863,
                          "nodeType": "Block",
                          "src": "2408:219:16",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4845,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4758,
                                  "src": "2431:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4846,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4756,
                                  "src": "2442:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2431:21:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4853,
                              "nodeType": "IfStatement",
                              "src": "2427:85:16",
                              "trueBody": {
                                "id": 4852,
                                "nodeType": "Block",
                                "src": "2454:58:16",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4848,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4760,
                                        "src": "2477:8:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2488:4:16",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2477:15:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4851,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2477:15:16"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4854,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4762,
                                  "src": "2530:13:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2546:4:16",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2530:20:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4857,
                              "nodeType": "ExpressionStatement",
                              "src": "2530:20:16"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4859,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4756,
                                    "src": "2590:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4860,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4758,
                                    "src": "2602:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4858,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4768,
                                  "src": "2574:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2574:37:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4862,
                              "nodeType": "EmitStatement",
                              "src": "2569:42:16"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 4868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:16"
            },
            "returnParameters": {
              "id": 4818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:16"
            },
            "scope": 4869,
            "src": "2103:542:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4870,
        "src": "165:2483:16"
      }
    ],
    "src": "0:2650:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-01-31T16:06:53.503Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes\r",
        "params": {
          "_requestId": "to tip\r",
          "_tip": "amount\r"
        }
      },
      "addTipWithEther(uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\r at the price specified by the userContract owner.\r",
        "params": {
          "_requestId": "to tip\r"
        }
      },
      "constructor": {
        "details": "This constructor function is used to pass variables to the optimistic contract's constructor\r and the function is blank\r",
        "params": {
          "_disputeFeeRequired": "the fee to dispute the optimistic price(price sumbitted by known trusted party)\r",
          "_disputePeriod": "is the time frame a value can be disputed after being imputed\r",
          "_granularity": "is the amount of decimals desired on the requested value\r",
          "_requestIds": "are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r System be sure to create some.\r",
          "_userContract": "address for UserContract\r"
        }
      },
      "disputeOptimisticValue(uint256)": {
        "details": "allows user to initiate dispute on the value of the specified timestamp\r",
        "params": {
          "_timestamp": "is the timestamp for the value to be disputed\r"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getCurrentValue()": {
        "details": "Getter function for latest value available\r",
        "return": "latest value available\r"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getDisputedValueByIndex(uint256)": {
        "details": "Getter function for the dispute value by index\r",
        "return": "the value\r"
      },
      "getDisputedValues()": {
        "details": "Getter function for all disputed values\r",
        "return": "the array with all values under dispute\r"
      },
      "getFirstUndisputedValueAfter(uint256)": {
        "details": "Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\r but can be used on its own.\r",
        "params": {
          "_timestamp": "to search the first undisputed value there after\r"
        }
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\r which it searched for the first verified value\r"
      },
      "getIsValue(uint256)": {
        "details": "Checks to if a value exists for the specifived timestamp\r",
        "params": {
          "_timestamp": "to verify\r"
        },
        "return": "ture if it exists\r"
      },
      "getMyValuesByTimestamp(uint256)": {
        "details": "Getter function for the value based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive value from\r"
        }
      },
      "getNumberOfDisputedValues()": {
        "details": "Getter function for the number of disputed values\r",
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getNumberOfValuesPerTimestamp(uint256)": {
        "details": "Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive number of requestIds\r"
        },
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getRequestIds()": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r",
        "return": "uint array of requests Ids'\r"
      },
      "getRequestIdsIncluded(uint256)": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r at the specified timestamp. This only gets populated after a dispute is initiated and the\r function getTellorValues is ran.\r",
        "params": {
          "_timestamp": "to retreive the requestIds\r"
        },
        "return": "uint array of requests Ids' included in the calcluation of the value\r"
      },
      "getTellorValues(uint256)": {
        "details": "This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the\r requestsIds and replaces the value set by the contract owner, centralized party.\r",
        "params": {
          "_timestamp": "to get Tellor data from\r"
        },
        "return": "uint of new value and true if it was able to get Tellor data\r"
      },
      "getTimestamps()": {
        "details": "Getter function for the timestamps available\r",
        "return": "uint array of timestamps available\r"
      },
      "isDisputed(uint256)": {
        "details": "This checks if the value for the specified timestamp is under dispute\r",
        "params": {
          "_timestamp": "to check if it is under dispute\r"
        },
        "return": "true if it is under dispute\r"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\r users will just go to an exchange and get tokens from there)\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "requestDataWithEther(string,string,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r"
        }
      },
      "resultFor(bytes32)": {
        "details": "Allows the user to get the latest value for the requestId specified using the \r ADO specification for the standard inteface for price oracles\r",
        "params": {
          "_bytesId": "is the ADO standarized bytes32 price/key value pair identifier\r"
        },
        "return": "the timestamp, outcome or value/ and the status code (for retreived, null, etc...)\r"
      },
      "setContractDetails(uint256)": {
        "details": "creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r",
        "params": {
          "_duration": "in seconds\r"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address\r",
        "params": {
          "_userContract": "address\r"
        }
      },
      "setValue(uint256,uint256)": {
        "details": "allows contract owner, a centralized party to enter value\r",
        "params": {
          "_timestamp": "is the timestamp for the value\r",
          "_value": "is the value for the timestamp specified\r"
        }
      },
      "settleContracts()": {
        "details": "testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\r"
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership\r",
        "params": {
          "_newOwner": "address\r"
        }
      },
      "withdrawETH()": {
        "details": "Allows the contract owner(Tellor) to withdraw ETH from this contract\r"
      }
    },
    "title": "Reader\r This contracts is a pretend contract using Tellor that compares two time values\r"
  },
  "userdoc": {
    "methods": {}
  }
}