{
  "contractName": "TestContract",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTellorValues",
      "outputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_didGet",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "disputeOptimisticValue",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfValuesPerTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputedValues",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamps",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputePeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstUndisputedValueAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDisputedValueByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getIsValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "longWins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMyValuesByTimestamp",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        },
        {
          "name": "_disputeFeeRequired",
          "type": "uint256"
        },
        {
          "name": "_disputePeriod",
          "type": "uint256"
        },
        {
          "name": "_requestIds",
          "type": "uint256[]"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_svalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evalue",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "NewValueSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ValueDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TellorValuePlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setContractDetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "settleContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTellorValues\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_didGet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"disputeOptimisticValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getNumberOfValuesPerTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setContractDetails\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstUndisputedValueAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDisputedValueByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIsValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"longWins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMyValuesByTimestamp\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"},{\"name\":\"_disputeFeeRequired\",\"type\":\"uint256\"},{\"name\":\"_disputePeriod\",\"type\":\"uint256\"},{\"name\":\"_requestIds\",\"type\":\"uint256[]\"},{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_svalue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_evalue\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_disputer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TellorValuePlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\\r\",\"params\":{\"_requestId\":\"to tip\\r\",\"_tip\":\"amount\\r\"}},\"addTipWithEther(uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\\r at the price specified by the userContract owner.\\r\",\"params\":{\"_requestId\":\"to tip\\r\"}},\"constructor\":{\"details\":\"This constructor function is used to pass variables to the optimistic contract's constructor\\r and the function is blank\\r\",\"params\":{\"_disputeFeeRequired\":\"the fee to dispute the optimistic price(price sumbitted by known trusted party)\\r\",\"_disputePeriod\":\"is the time frame a value can be disputed after being imputed\\r\",\"_granularity\":\"is the amount of decimals desired on the requested value\\r\",\"_requestIds\":\"are the requests Id's on the Tellor System corresponding to the data types used on this contract.\\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\\r System be sure to create some.\\r\",\"_userContract\":\"address for UserContract\\r\"}},\"disputeOptimisticValue(uint256)\":{\"details\":\"allows user to initiate dispute on the value of the specified timestamp\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value to be disputed\\r\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getCurrentValue()\":{\"details\":\"Getter function for latest value available\\r\",\"return\":\"latest value available\\r\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getDisputedValueByIndex(uint256)\":{\"details\":\"Getter function for the dispute value by index\\r\",\"return\":\"the value\\r\"},\"getDisputedValues()\":{\"details\":\"Getter function for all disputed values\\r\",\"return\":\"the array with all values under dispute\\r\"},\"getFirstUndisputedValueAfter(uint256)\":{\"details\":\"Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\\r but can be used on its own.\\r\",\"params\":{\"_timestamp\":\"to search the first undisputed value there after\\r\"}},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\\r which it searched for the first verified value\\r\"},\"getIsValue(uint256)\":{\"details\":\"Checks to if a value exists for the specifived timestamp\\r\",\"params\":{\"_timestamp\":\"to verify\\r\"},\"return\":\"ture if it exists\\r\"},\"getMyValuesByTimestamp(uint256)\":{\"details\":\"Getter function for the value based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive value from\\r\"}},\"getNumberOfDisputedValues()\":{\"details\":\"Getter function for the number of disputed values\\r\",\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getNumberOfValuesPerTimestamp(uint256)\":{\"details\":\"Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive number of requestIds\\r\"},\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getRequestIds()\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r\",\"return\":\"uint array of requests Ids'\\r\"},\"getRequestIdsIncluded(uint256)\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r at the specified timestamp. This only gets populated after a dispute is initiated and the\\r function getTellorValues is ran.\\r\",\"params\":{\"_timestamp\":\"to retreive the requestIds\\r\"},\"return\":\"uint array of requests Ids' included in the calcluation of the value\\r\"},\"getTellorValues(uint256)\":{\"details\":\"This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the\\r requestsIds and replaces the value set by the contract owner, centralized party.\\r\",\"params\":{\"_timestamp\":\"to get Tellor data from\\r\"},\"return\":\"uint of new value and true if it was able to get Tellor data\\r\"},\"getTimestamps()\":{\"details\":\"Getter function for the timestamps available\\r\",\"return\":\"uint array of timestamps available\\r\"},\"isDisputed(uint256)\":{\"details\":\"This checks if the value for the specified timestamp is under dispute\\r\",\"params\":{\"_timestamp\":\"to check if it is under dispute\\r\"},\"return\":\"true if it is under dispute\\r\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes\\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\\r users will just go to an exchange and get tokens from there)\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"requestDataWithEther(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"setContractDetails(uint256)\":{\"details\":\"creates a start(now) and end time(now + duration specified) for testing a contract start and end period\\r\",\"params\":{\"_duration\":\"in seconds\\r\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\\r\",\"params\":{\"_userContract\":\"address\\r\"}},\"setValue(uint256,uint256)\":{\"details\":\"allows contract owner, a centralized party to enter value\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value\\r\",\"_value\":\"is the value for the timestamp specified\\r\"}},\"settleContracts()\":{\"details\":\"testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\\r\"},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\\r\",\"params\":{\"_newOwner\":\"address\\r\"}},\"withdrawETH()\":{\"details\":\"Allows the contract owner(Tellor) to withdraw ETH from this contract\\r\"}},\"title\":\"Reader\\r This contracts is a pretend contract using Tellor that compares two time values\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol\":{\"keccak256\":\"0xc77597436705fa669949aab03899d13ed786b5a718df162cf04a3cced7c237d9\",\"urls\":[\"bzzr://21c99a33813aa3853f2222aa265c2771b9182c228bc4bc3d24e71bba4d06271d\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/UserContract.sol\":{\"keccak256\":\"0xd88fea2ee2a29380ad7e82cd5f7b207805cc2bd99f30c59b4a6005d7144ff5d5\",\"urls\":[\"bzzr://e3f6d4153350cc479a461744679be3b3580e5f255974933b0057a423fc26c05b\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/UsingTellor.sol\":{\"keccak256\":\"0xb27b0307f91390bdeca1d9133b72c146c598ae4052d5ee6143745e0f848af8ec\",\"urls\":[\"bzzr://22a6256723cd76e138f7cdc573be7ee9f41cf9ffb6101ff680549332b02a5ef1\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8a70742b1e1ac65d3688b2cec1e38196b2de488a18fe4ba66d241414f9728927\",\"urls\":[\"bzzr://da7ee50784484474f0092241847f2d717450ed12bbaeb4040f47628afee80cfb\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0xd21546214e7d31401d1a96398857ec826bbb59cd0c1fe020d62e79a7aa7d58f9\",\"urls\":[\"bzzr://51b57efeef3a3c5da4efd1b2b10652a444cf1070464d529525875a8670a16675\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0xccbc25184f09263192238c7a8acf254bf13ec1f06c31156b3cd1c3f438a65b37\",\"urls\":[\"bzzr://6c782d69824055b8efe3f3d5801cc43ad4c3e857f960d698c9bcd86654b469a3\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x3517d1cecb0e449924d673e3fe3bd681bd151973f920d9c716f3baf6499826c7\",\"urls\":[\"bzzr://af89a9f762f67c69fba2cdc517311981663f72e3dd8b597c27aa0d47a4f8560b\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0xed22cf575e10d9794ca7efe160cc360783e00127361a391bd68aa397790394e0\",\"urls\":[\"bzzr://e87dbef3d01b6b847726ec949fb49d4df18cfbc2902e4db6687361c933970a90\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x70653719f7deda44ce81106e687ad70e56c09c70146e8e70d7ec732f83ba0d6a\",\"urls\":[\"bzzr://0b7a6090a7dd244e28ee3ca27043a88b501854eb17eadc97f1551ff84e2c7202\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/Tellor.sol\":{\"keccak256\":\"0x47b22cd4cc433c2c9ac608b201a05822842e2274217812264631ded038608fc3\",\"urls\":[\"bzzr://0aa8012c0e7cd6d441a69d45c2c55907832fdf8c503f440e3e4eedbafe7b1011\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TellorGetters.sol\":{\"keccak256\":\"0x79a2ea2e2a50fd9e4f9ad7cc9830dff6337f3ab336bc42815fa6b6ac5c4bd2ab\",\"urls\":[\"bzzr://a3ab1b55dd6c3d9bb486ddf487297218cef15f05bd993f7ed181c6d98f667299\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TellorMaster.sol\":{\"keccak256\":\"0x40bef5591065126b3caffae521d576d6f0952c286d329e6179f53e17d83f817d\",\"urls\":[\"bzzr://ec55bcea631a5495c110775eee3bf8e028d6a2f987b26bd2c59504b98ec9b8c7\"]},\"/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol\":{\"keccak256\":\"0x9e0c022cf14b7475d9dda8111331fda2d7c65de72469a5cdb9dff81d58f2960d\",\"urls\":[\"bzzr://75277656743ab1fcb446c87861903376f3056e296710d6309b0340911e8291dd\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002e6038038062002e60833981018060405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080516401000000008111156200006e57600080fd5b828101905060208101848111156200008557600080fd5b8151856020820283011164010000000082111715620000a357600080fd5b505092919060200180519060200190929190505050848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600a8190555082600b819055508060098190555081600790805190602001906200016d9291906200017e565b5050505050505050505050620001f8565b828054828255906000526020600020908101928215620001bd579160200282015b82811115620001bc5782518255916020019190600101906200019f565b5b509050620001cc9190620001d0565b5090565b620001f591905b80821115620001f1576000816000905550600101620001d7565b5090565b90565b612c5880620002086000396000f3fe60806040526004361061023b5760003560e01c806369949a861161012e578063a1206d4e116100ab578063d269a83c1161006f578063d269a83c14610ce0578063dc7ebf0e14610d4b578063e086e5ec14610ddb578063e631def714610df2578063f2fde38b14610e415761023b565b8063a1206d4e14610b5d578063ac33a27314610bae578063b63f210a14610c1a578063b9ce896b14610c86578063bad4d21e14610cb15761023b565b80637ccc586e116100f25780637ccc586e14610a1a5780638710580114610a6d5780638da5cb5b14610a8457806391bf116f14610adb5780639a64f07014610b0a5761023b565b806369949a86146108b557806371d8dd1914610916578063752d49a114610965578063775f75df146109aa5780637b8d56e3146109d55761023b565b80633f35ff32116101bc578063556f0dc711610180578063556f0dc71461075d57806359abbfe4146107885780635bf31d4d146107f45780635f059f3e1461081f578063681012e51461088a5761023b565b80633f35ff32146104a75780633fcad964146104d25780633fff2816146105335780634482e6f314610622578063550921d4146107045761023b565b80632aa0bc1f116102035780632aa0bc1f1461034c57806331562d691461039b57806336e9d632146103d657806337ae9e43146104295780633c9177cd1461047c5761023b565b8063062777ff146102405780630f76c1141461029a57806316e72abb146102c55780632639e0b0146102f0578063292b8cce1461031e575b600080fd5b34801561024c57600080fd5b506102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610e92565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102a657600080fd5b506102af611449565b6040518082815260200191505060405180910390f35b3480156102d157600080fd5b506102da6114f2565b6040518082815260200191505060405180910390f35b61031c6004803603602081101561030657600080fd5b81019080803590602001909291905050506114f8565b005b61034a6004803603602081101561033457600080fd5b8101908080359060200190929190505050611588565b005b34801561035857600080fd5b506103856004803603602081101561036f57600080fd5b81019080803590602001909291905050506117de565b6040518082815260200191505060405180910390f35b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b81019080803590602001909291905050506117fe565b005b3480156103e257600080fd5b5061040f600480360360208110156103f957600080fd5b810190808035906020019092919050505061182b565b604051808215151515815260200191505060405180910390f35b34801561043557600080fd5b506104626004803603602081101561044c57600080fd5b810190808035906020019092919050505061184b565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b5061049161186b565b6040518082815260200191505060405180910390f35b3480156104b357600080fd5b506104bc611871565b6040518082815260200191505060405180910390f35b3480156104de57600080fd5b5061050b600480360360208110156104f557600080fd5b8101908080359060200190929190505050611877565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561053f57600080fd5b506106206004803603608081101561055657600080fd5b810190808035906020019064010000000081111561057357600080fd5b82018360208201111561058557600080fd5b803590602001918460018302840111640100000000831117156105a757600080fd5b9091929391929390803590602001906401000000008111156105c857600080fd5b8201836020820111156105da57600080fd5b803590602001918460018302840111640100000000831117156105fc57600080fd5b9091929391929390803590602001909291908035906020019092919050505061194a565b005b6107026004803603608081101561063857600080fd5b810190808035906020019064010000000081111561065557600080fd5b82018360208201111561066757600080fd5b8035906020019184600183028401116401000000008311171561068957600080fd5b9091929391929390803590602001906401000000008111156106aa57600080fd5b8201836020820111156106bc57600080fd5b803590602001918460018302840111640100000000831117156106de57600080fd5b90919293919293908035906020019092919080359060200190929190505050611c46565b005b34801561071057600080fd5b506107476004803603604081101561072757600080fd5b810190808035906020019092919080359060200190929190505050611d4b565b6040518082815260200191505060405180910390f35b34801561076957600080fd5b50610772611d79565b6040518082815260200191505060405180910390f35b34801561079457600080fd5b5061079d611d7f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107e05780820151818401526020810190506107c5565b505050509050019250505060405180910390f35b34801561080057600080fd5b50610809611dd7565b6040518082815260200191505060405180910390f35b34801561082b57600080fd5b506108626004803603604081101561084257600080fd5b810190808035906020019092919080359060200190929190505050611ddd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561089657600080fd5b5061089f611eb8565b6040518082815260200191505060405180910390f35b3480156108c157600080fd5b506108ee600480360360208110156108d857600080fd5b8101908080359060200190929190505050611ec5565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561092257600080fd5b5061094f6004803603602081101561093957600080fd5b8101908080359060200190929190505050611fc1565b6040518082815260200191505060405180910390f35b34801561097157600080fd5b506109a86004803603604081101561098857600080fd5b810190808035906020019092919080359060200190929190505050611fe2565b005b3480156109b657600080fd5b506109bf612268565b6040518082815260200191505060405180910390f35b3480156109e157600080fd5b50610a18600480360360408110156109f857600080fd5b81019080803590602001909291908035906020019092919050505061226e565b005b348015610a2657600080fd5b50610a5360048036036020811015610a3d57600080fd5b810190808035906020019092919050505061245f565b604051808215151515815260200191505060405180910390f35b348015610a7957600080fd5b50610a82612489565b005b348015610a9057600080fd5b50610a9961255e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ae757600080fd5b50610af0612584565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b4360048036036020811015610b2d57600080fd5b8101908080359060200190929190505050612597565b604051808215151515815260200191505060405180910390f35b348015610b6957600080fd5b50610bac60048036036020811015610b8057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125c1565b005b348015610bba57600080fd5b50610bc36126c7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c06578082015181840152602081019050610beb565b505050509050019250505060405180910390f35b348015610c2657600080fd5b50610c2f61271f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c72578082015181840152602081019050610c57565b505050509050019250505060405180910390f35b348015610c9257600080fd5b50610c9b612777565b6040518082815260200191505060405180910390f35b348015610cbd57600080fd5b50610cc661277d565b604051808215151515815260200191505060405180910390f35b348015610cec57600080fd5b50610d2360048036036040811015610d0357600080fd5b810190808035906020019092919080359060200190929190505050612790565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d5757600080fd5b50610d8460048036036020811015610d6e57600080fd5b810190808035906020019092919050505061286b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610dc7578082015181840152602081019050610dac565b505050509050019250505060405180910390f35b348015610de757600080fd5b50610df06128d6565b005b348015610dfe57600080fd5b50610e2b60048036036020811015610e1557600080fd5b8101908080359060200190929190505050612a1b565b6040518082815260200191505060405180910390f35b348015610e4d57600080fd5b50610e9060048036036020811015610e6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a38565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d6020811015610f2857600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa457600080fd5b505afa158015610fb8573d6000803e3d6000fd5b505050506040513d6020811015610fce57600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561106157600080fd5b505afa158015611075573d6000803e3d6000fd5b505050506040513d602081101561108b57600080fd5b810190808051906020019092919050505090506000600190505b600780549050811161143f576110bb8189611ddd565b80955081995082985050505085156112eb57600060095484816110da57fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161113057fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff161515141561128957600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a26112e4565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156112e35760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611432565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561136e57600080fd5b505afa158015611382573d6000803e3d6000fd5b505050506040513d602081101561139857600080fd5b81019080805190602001909291905050501115611431578373ffffffffffffffffffffffffffffffffffffffff1663752d49a18260078054905085816113da57fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561141857600080fd5b505af115801561142c573d6000803e3d6000fd5b505050505b5b80806001019150506110a5565b5050505050915091565b600080600680549050116114c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b6114ed6006600160068054905003815481106114dd57fe5b9060005260206000200154612a1b565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b505050505050565b600a54341015611600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff16611676576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bf96034913960400191505060405180910390fd5b600b548101600954428161168657fe5b06420311156116fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161180957fe5b064203600c8190555080600954428161181e57fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156118ee57600080fd5b505afa158015611902573d6000803e3d6000fd5b505050506040513d606081101561191857600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b357600080fd5b505afa1580156119c7573d6000803e3d6000fd5b505050506040513d60208110156119dd57600080fd5b810190808051906020019092919050505090506000821115611b62578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ab457600080fd5b505af1158015611ac8573d6000803e3d6000fd5b505050506040513d6020811015611ade57600080fd5b8101908080519060200190929190505050611b61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b158015611d2a57600080fd5b505af1158015611d3e573d6000803e3d6000fd5b5050505050505050505050565b60056020528160005260406000208181548110611d6457fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611dcd57602002820191906000526020600020905b815481526020019060010190808311611db9575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611e5c57600080fd5b505afa158015611e70573d6000803e3d6000fd5b505050506040513d6060811015611e8657600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b60008060008060068054905090506000811115611fa75760008190505b6000811115611f84578560066001830381548110611efc57fe5b906000526020600020015410158015611f535750600015156004600060066001850381548110611f2857fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15611f765760066001820381548110611f6857fe5b906000526020600020015492505b808060019003915050611ee2565b506000821115611fa6576001611f9983612a1b565b8393509350935050611fba565b5b6000806000819150809050935093509350505b9193909250565b600060088281548110611fd057fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561204b57600080fd5b505afa15801561205f573d6000803e3d6000fd5b505050506040513d602081101561207557600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561214357600080fd5b505af1158015612157573d6000803e3d6000fd5b505050506040513d602081101561216d57600080fd5b81019080805190602001909291905050506121f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561224b57600080fd5b505af115801561225f573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561233e83612597565b1515146123b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612497600c54611ec5565b600e60008295508391905055829450505050811561255a576124ba600d54611ec5565b600f60008295508391905055829450505050811561255957600e54600f5411156124fa576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600780548060200260200160405190810160405280929190818152602001828054801561271557602002820191906000526020600020905b815481526020019060010190808311612701575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561276d57602002820191906000526020600020905b815481526020019060010190808311612759575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b15801561280f57600080fd5b505afa158015612823573d6000803e3d6000fd5b505050506040513d606081101561283957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6060600560008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156128ca57602002820191906000526020600020905b8154815260200190600101908083116128b6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612a18573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612afb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a165627a7a72305820e891a8635fc2317c52cea3cb1e1fd2d42972dd873735015391d971dcfcf5ab710029",
  "deployedBytecode": "0x60806040526004361061023b5760003560e01c806369949a861161012e578063a1206d4e116100ab578063d269a83c1161006f578063d269a83c14610ce0578063dc7ebf0e14610d4b578063e086e5ec14610ddb578063e631def714610df2578063f2fde38b14610e415761023b565b8063a1206d4e14610b5d578063ac33a27314610bae578063b63f210a14610c1a578063b9ce896b14610c86578063bad4d21e14610cb15761023b565b80637ccc586e116100f25780637ccc586e14610a1a5780638710580114610a6d5780638da5cb5b14610a8457806391bf116f14610adb5780639a64f07014610b0a5761023b565b806369949a86146108b557806371d8dd1914610916578063752d49a114610965578063775f75df146109aa5780637b8d56e3146109d55761023b565b80633f35ff32116101bc578063556f0dc711610180578063556f0dc71461075d57806359abbfe4146107885780635bf31d4d146107f45780635f059f3e1461081f578063681012e51461088a5761023b565b80633f35ff32146104a75780633fcad964146104d25780633fff2816146105335780634482e6f314610622578063550921d4146107045761023b565b80632aa0bc1f116102035780632aa0bc1f1461034c57806331562d691461039b57806336e9d632146103d657806337ae9e43146104295780633c9177cd1461047c5761023b565b8063062777ff146102405780630f76c1141461029a57806316e72abb146102c55780632639e0b0146102f0578063292b8cce1461031e575b600080fd5b34801561024c57600080fd5b506102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610e92565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102a657600080fd5b506102af611449565b6040518082815260200191505060405180910390f35b3480156102d157600080fd5b506102da6114f2565b6040518082815260200191505060405180910390f35b61031c6004803603602081101561030657600080fd5b81019080803590602001909291905050506114f8565b005b61034a6004803603602081101561033457600080fd5b8101908080359060200190929190505050611588565b005b34801561035857600080fd5b506103856004803603602081101561036f57600080fd5b81019080803590602001909291905050506117de565b6040518082815260200191505060405180910390f35b3480156103a757600080fd5b506103d4600480360360208110156103be57600080fd5b81019080803590602001909291905050506117fe565b005b3480156103e257600080fd5b5061040f600480360360208110156103f957600080fd5b810190808035906020019092919050505061182b565b604051808215151515815260200191505060405180910390f35b34801561043557600080fd5b506104626004803603602081101561044c57600080fd5b810190808035906020019092919050505061184b565b604051808215151515815260200191505060405180910390f35b34801561048857600080fd5b5061049161186b565b6040518082815260200191505060405180910390f35b3480156104b357600080fd5b506104bc611871565b6040518082815260200191505060405180910390f35b3480156104de57600080fd5b5061050b600480360360208110156104f557600080fd5b8101908080359060200190929190505050611877565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561053f57600080fd5b506106206004803603608081101561055657600080fd5b810190808035906020019064010000000081111561057357600080fd5b82018360208201111561058557600080fd5b803590602001918460018302840111640100000000831117156105a757600080fd5b9091929391929390803590602001906401000000008111156105c857600080fd5b8201836020820111156105da57600080fd5b803590602001918460018302840111640100000000831117156105fc57600080fd5b9091929391929390803590602001909291908035906020019092919050505061194a565b005b6107026004803603608081101561063857600080fd5b810190808035906020019064010000000081111561065557600080fd5b82018360208201111561066757600080fd5b8035906020019184600183028401116401000000008311171561068957600080fd5b9091929391929390803590602001906401000000008111156106aa57600080fd5b8201836020820111156106bc57600080fd5b803590602001918460018302840111640100000000831117156106de57600080fd5b90919293919293908035906020019092919080359060200190929190505050611c46565b005b34801561071057600080fd5b506107476004803603604081101561072757600080fd5b810190808035906020019092919080359060200190929190505050611d4b565b6040518082815260200191505060405180910390f35b34801561076957600080fd5b50610772611d79565b6040518082815260200191505060405180910390f35b34801561079457600080fd5b5061079d611d7f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107e05780820151818401526020810190506107c5565b505050509050019250505060405180910390f35b34801561080057600080fd5b50610809611dd7565b6040518082815260200191505060405180910390f35b34801561082b57600080fd5b506108626004803603604081101561084257600080fd5b810190808035906020019092919080359060200190929190505050611ddd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561089657600080fd5b5061089f611eb8565b6040518082815260200191505060405180910390f35b3480156108c157600080fd5b506108ee600480360360208110156108d857600080fd5b8101908080359060200190929190505050611ec5565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561092257600080fd5b5061094f6004803603602081101561093957600080fd5b8101908080359060200190929190505050611fc1565b6040518082815260200191505060405180910390f35b34801561097157600080fd5b506109a86004803603604081101561098857600080fd5b810190808035906020019092919080359060200190929190505050611fe2565b005b3480156109b657600080fd5b506109bf612268565b6040518082815260200191505060405180910390f35b3480156109e157600080fd5b50610a18600480360360408110156109f857600080fd5b81019080803590602001909291908035906020019092919050505061226e565b005b348015610a2657600080fd5b50610a5360048036036020811015610a3d57600080fd5b810190808035906020019092919050505061245f565b604051808215151515815260200191505060405180910390f35b348015610a7957600080fd5b50610a82612489565b005b348015610a9057600080fd5b50610a9961255e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ae757600080fd5b50610af0612584565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b4360048036036020811015610b2d57600080fd5b8101908080359060200190929190505050612597565b604051808215151515815260200191505060405180910390f35b348015610b6957600080fd5b50610bac60048036036020811015610b8057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125c1565b005b348015610bba57600080fd5b50610bc36126c7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c06578082015181840152602081019050610beb565b505050509050019250505060405180910390f35b348015610c2657600080fd5b50610c2f61271f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c72578082015181840152602081019050610c57565b505050509050019250505060405180910390f35b348015610c9257600080fd5b50610c9b612777565b6040518082815260200191505060405180910390f35b348015610cbd57600080fd5b50610cc661277d565b604051808215151515815260200191505060405180910390f35b348015610cec57600080fd5b50610d2360048036036040811015610d0357600080fd5b810190808035906020019092919080359060200190929190505050612790565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d5757600080fd5b50610d8460048036036020811015610d6e57600080fd5b810190808035906020019092919050505061286b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610dc7578082015181840152602081019050610dac565b505050509050019250505060405180910390f35b348015610de757600080fd5b50610df06128d6565b005b348015610dfe57600080fd5b50610e2b60048036036020811015610e1557600080fd5b8101908080359060200190929190505050612a1b565b6040518082815260200191505060405180910390f35b348015610e4d57600080fd5b50610e9060048036036020811015610e6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a38565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d6020811015610f2857600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa457600080fd5b505afa158015610fb8573d6000803e3d6000fd5b505050506040513d6020811015610fce57600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561106157600080fd5b505afa158015611075573d6000803e3d6000fd5b505050506040513d602081101561108b57600080fd5b810190808051906020019092919050505090506000600190505b600780549050811161143f576110bb8189611ddd565b80955081995082985050505085156112eb57600060095484816110da57fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161113057fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff161515141561128957600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a26112e4565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156112e35760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611432565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561136e57600080fd5b505afa158015611382573d6000803e3d6000fd5b505050506040513d602081101561139857600080fd5b81019080805190602001909291905050501115611431578373ffffffffffffffffffffffffffffffffffffffff1663752d49a18260078054905085816113da57fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561141857600080fd5b505af115801561142c573d6000803e3d6000fd5b505050505b5b80806001019150506110a5565b5050505050915091565b600080600680549050116114c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b6114ed6006600160068054905003815481106114dd57fe5b9060005260206000200154612a1b565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b505050505050565b600a54341015611600576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff16611676576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612bf96034913960400191505060405180910390fd5b600b548101600954428161168657fe5b06420311156116fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161180957fe5b064203600c8190555080600954428161181e57fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156118ee57600080fd5b505afa158015611902573d6000803e3d6000fd5b505050506040513d606081101561191857600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b357600080fd5b505afa1580156119c7573d6000803e3d6000fd5b505050506040513d60208110156119dd57600080fd5b810190808051906020019092919050505090506000821115611b62578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ab457600080fd5b505af1158015611ac8573d6000803e3d6000fd5b505050506040513d6020811015611ade57600080fd5b8101908080519060200190929190505050611b61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b158015611c2557600080fd5b505af1158015611c39573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b158015611d2a57600080fd5b505af1158015611d3e573d6000803e3d6000fd5b5050505050505050505050565b60056020528160005260406000208181548110611d6457fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611dcd57602002820191906000526020600020905b815481526020019060010190808311611db9575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611e5c57600080fd5b505afa158015611e70573d6000803e3d6000fd5b505050506040513d6060811015611e8657600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b60008060008060068054905090506000811115611fa75760008190505b6000811115611f84578560066001830381548110611efc57fe5b906000526020600020015410158015611f535750600015156004600060066001850381548110611f2857fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15611f765760066001820381548110611f6857fe5b906000526020600020015492505b808060019003915050611ee2565b506000821115611fa6576001611f9983612a1b565b8393509350935050611fba565b5b6000806000819150809050935093509350505b9193909250565b600060088281548110611fd057fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561204b57600080fd5b505afa15801561205f573d6000803e3d6000fd5b505050506040513d602081101561207557600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561214357600080fd5b505af1158015612157573d6000803e3d6000fd5b505050506040513d602081101561216d57600080fd5b81019080805190602001909291905050506121f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561224b57600080fd5b505af115801561225f573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561233e83612597565b1515146123b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612497600c54611ec5565b600e60008295508391905055829450505050811561255a576124ba600d54611ec5565b600f60008295508391905055829450505050811561255957600e54600f5411156124fa576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600780548060200260200160405190810160405280929190818152602001828054801561271557602002820191906000526020600020905b815481526020019060010190808311612701575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561276d57602002820191906000526020600020905b815481526020019060010190808311612759575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b15801561280f57600080fd5b505afa158015612823573d6000803e3d6000fd5b505050506040513d606081101561283957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6060600560008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156128ca57602002820191906000526020600020905b8154815260200190600101908083116128b6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612a18573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612afb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a165627a7a72305820e891a8635fc2317c52cea3cb1e1fd2d42972dd873735015391d971dcfcf5ab710029",
  "sourceMap": "165:2483:14:-;;;1242:262;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:262:14;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1242:262:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;1242:262:14;;;;;;;;;;;;;;;;;1418:13;1433:19;1454:14;1470:11;1483:12;2616:13:1;700::3;666:18;;:48;;;;;;;;;;;;;;;;;;733:10;725:5;;:18;;;;;;;;;;;;;;;;;;613:138;2660:19:1;2647:10;:32;;;;2706:14;2690:13;:30;;;;2745:12;2731:11;:26;;;;2781:11;2768:10;:24;;;;;;;;;;;;:::i;:::-;;2439:361;;;;;1242:262:14;;;;;165:2483;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "165:2483:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5051:2995:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5051:2995:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5051:2995:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10350:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10350:210:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;308:23:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:23:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5074:156:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5074:156:3;;;;;;;;;;;;;;;;;:::i;:::-;;3911:784:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3911:784:1;;;;;;;;;;;;;;;;;:::i;:::-;;9804:154;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9804:154:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9804:154:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1680:178:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1680:178:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1680:178:14;;;;;;;;;;;;;;;;;:::i;:::-;;373:39:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;373:39:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;373:39:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;576:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:46:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;576:46:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;243:26:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:26:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;276:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:25:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1039:199:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:199:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1039:199:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3257:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3257:403:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3257:403:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3257:403:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3257:403:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3257:403:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3257:403:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3257:403:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3257:403:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4153:248;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4153:248:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4153:248:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4153:248:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4153:248:3;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4153:248:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4153:248:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4153:248:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;706:55:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:55:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:55:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1218:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1218:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10692:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10692:102:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10692:102:1;;;;;;;;;;;;;;;;;1297:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1297:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1730:234:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1730:234:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1730:234:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11759:121:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11759:121:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8568:652;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8568:652:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8568:652:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12564:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12564:134:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12564:134:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4567:277:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4567:277:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4567:277:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;208:28:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;208:28:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3032:699:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3032:699:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3032:699:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12334:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12334:121:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12334:121:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2103:542:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2103:542:14;;;:::i;:::-;;333:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;333:28:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;365:25:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:25:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10120:112:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10120:112:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10120:112:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5349:206:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5349:206:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5349:206:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;10956:102:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10956:102:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10956:102:1;;;;;;;;;;;;;;;;;12012:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12012:115:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12012:115:1;;;;;;;;;;;;;;;;;1251:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:25:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;338:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:20:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2324:265:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2324:265:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2324:265:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11450:148:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11450:148:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11450:148:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11450:148:1;;;;;;;;;;;;;;;;;8152:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8152:159:1;;;:::i;:::-;;9385:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9385:143:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9385:143:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5659:215:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5659:215:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5659:215:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;5051:2995:1;5112:14;5128:12;5371:20;5407:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5407:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5407:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5407:41:1;;;;;;;;;;;;;;;;5371:78;;5460:18;5488;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5488:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5488:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5488:41:1;;;;;;;;;;;;;;;;5460:70;;5541:27;5579:23;5605:7;:17;;;5631:4;5605:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5605:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5605:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5605:32:1;;;;;;;;;;;;;;;;5579:58;;5828:9;5840:1;5828:13;;5823:2216;5848:10;:17;;;;5843:1;:22;5823:2216;;6117:40;6143:1;6146:10;6117:25;:40::i;:::-;6076:81;;;;;;;;;;;;6176:7;6172:1856;;;6204:16;6268:11;;6246:19;:33;;;;;;6223:19;:57;6204:76;;6434:17;6593:1;6555:18;:28;6574:8;6555:28;;;;;;;;;;;:35;;;;:39;6494:18;:28;6513:8;6494:28;;;;;;;;;;;:35;;;;6464:17;:27;6482:8;6464:27;;;;;;;;;;;;:65;6455:6;:74;6454:141;;;;;;6434:161;;6717:9;6687:17;:27;6705:8;6687:27;;;;;;;;;;;:39;;;;6750:38;6768:8;6778:9;6750:38;;;;;;;;;;;;;;;;;;;;;;;;6928:18;:28;6947:8;6928:28;;;;;;;;;;;6962:1;6928:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6928:36:1;;;;;;;;;;;;;;;;;;;;;;7318:5;7297:26;;:7;:17;7305:8;7297:17;;;;;;;;;;;;;;;;;;;;;:26;;;7293:323;;;7348:10;7364:8;7348:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7348:25:1;;;;;;;;;;;;;;;;;;;;;;7416:4;7396:7;:17;7404:8;7396:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;7460:8;7448:29;7470:6;7448:29;;;;;;;;;;;;;;;;;;7293:323;;;7535:4;7507:32;;:14;:24;7522:8;7507:24;;;;;;;;;;;;;;;;;;;;;:32;;;7503:113;;;7591:5;7564:14;:24;7579:8;7564:24;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;7503:113;7293:323;6172:1856;;;;;7852:10;:17;;;;7817:7;:17;;;7843:4;7817:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7817:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7817:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7817:32:1;;;;;;;;;;;;;;;;:52;7813:215;;;7954:11;:18;;;7973:1;7994:10;:17;;;;7976:15;:35;;;;;;7954:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7954:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7954:58:1;;;;7813:215;6172:1856;5867:3;;;;;;;5823:2216;;;;5051:2995;;;;;;;:::o;10350:210::-;10400:7;10448:1;10428:10;:17;;;;:21;10420:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10495;10518:10;10549:1;10529:10;:17;;;;:21;10518:33;;;;;;;;;;;;;;;;10495:22;:57::i;:::-;10488:64;;10350:210;:::o;308:23:14:-;;;;:::o;5074:156:3:-;5158:18;;;;;;;;;;;5145:48;;;5200:9;5211:10;5145:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5145:77:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5145:77:3;;;;;5074:156;:::o;3911:784:1:-;4012:10;;3999:9;:23;;3991:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4154:7;:19;4162:10;4154:19;;;;;;;;;;;;;;;;;;;;;4146:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4338:13;;4325:10;:26;4309:11;;4303:3;:17;;;;;;4296:3;:25;:55;;4288:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4487:4;4458:14;:26;4473:10;4458:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4567:19;4592:10;4567:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4567:36:1;;;;;;;;;;;;;;;;;;;;;;4619:68;4633:10;4645;4657:17;:29;4675:10;4657:29;;;;;;;;;;;;4619:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3911:784;:::o;9804:154::-;9886:7;9913:18;:30;9932:10;9913:30;;;;;;;;;;;:37;;;;9906:44;;9804:154;;;:::o;1680:178:14:-;1776:11;;1770:3;:17;;;;;;1763:3;:25;1747:13;:41;;;;1841:9;1826:11;;1820:3;:17;;;;;;1813:3;:25;:37;1799:11;:51;;;;1680:178;:::o;373:39:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;576:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;243:26:14:-;;;;:::o;276:25::-;;;;:::o;1039:199:3:-;1105:15;1122:13;1137:27;1184:18;;;;;;;;;;;:34;;;1219:10;1184:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1184:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1184:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1184:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:53;;;;;;1039:199;;;;;:::o;3257:403::-;3385:14;3409:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3409:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3409:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3409:41:3;;;;;;;;;;;;;;;;3385:66;;3473:1;3466:4;:8;3462:122;;;3499:7;:20;;;3520:10;3540:4;3547;3499:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3499:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3499:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3499:53:3;;;;;;;;;;;;;;;;3491:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3462:122;3594:7;:19;;;3614:8;;3624:7;;3633:12;3647:4;3594:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3594:58:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3594:58:3;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3594:58:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3594:58:3;;;;3257:403;;;;;;;:::o;4153:248::-;4298:18;;;;;;;;;;;:39;;;4344:9;4355:8;;4365:7;;4374:12;4388:4;4298:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4298:95:3;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4298:95:3;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4298:95:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4298:95:3;;;;;4153:248;;;;;;:::o;706:55:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1218:26::-;;;;:::o;10692:102::-;10740:16;10776:10;10769:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10692:102;:::o;1297:28::-;;;;:::o;1730:234:3:-;1826:4;1832:7;1841:27;1888:18;;;;;;;;;;;:44;;;1933:10;1945;1888:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1888:68:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1888:68:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1888:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:75;;;;;;1730:234;;;;;:::o;11759:121:1:-;11819:7;11846:19;:26;;;;11839:33;;11759:121;:::o;8568:652::-;8647:4;8653:7;8662:27;8702:14;8719:10;:17;;;;8702:34;;8760:1;8751:6;:10;8747:435;;;8783:9;8795:6;8783:18;;8778:236;8807:1;8803;:5;8778:236;;;8859:10;8838;8853:1;8849;:5;8838:17;;;;;;;;;;;;;;;;:31;;:77;;;;;8910:5;8873:42;;:14;:33;8888:10;8903:1;8899;:5;8888:17;;;;;;;;;;;;;;;;8873:33;;;;;;;;;;;;;;;;;;;;;:42;;;8838:77;8834:165;;;8962:10;8977:1;8973;:5;8962:17;;;;;;;;;;;;;;;;8940:39;;8834:165;8810:3;;;;;;;;8778:236;;;;9054:1;9032:19;:23;9028:143;;;9084:4;9090:43;9113:19;9090:22;:43::i;:::-;9135:19;9076:79;;;;;;;;;9028:143;8747:435;9200:5;9207:1;9210;9192:20;;;;;;;;;;;;;8568:652;;;;;;:::o;12564:134::-;12636:7;12663:19;12683:6;12663:27;;;;;;;;;;;;;;;;12656:34;;12564:134;;;:::o;4567:277:3:-;4635:14;4659:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4659:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4659:41:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4659:41:3;;;;;;;;;;;;;;;;4635:66;;4720:7;:20;;;4741:10;4761:4;4768;4720:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4720:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4720:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4720:53:3;;;;;;;;;;;;;;;;4712:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4804:7;:14;;;4819:10;4831:4;4804:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4804:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4804:32:3;;;;4567:277;;;:::o;208:28:14:-;;;;:::o;3032:699:1:-;3170:5;;;;;;;;;;;3156:19;;:10;:19;;;3148:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3315:5;3289:31;;:22;3300:10;3289;:22::i;:::-;:31;;;3281:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3418:6;3386:17;:29;3404:10;3386:29;;;;;;;;;;;:38;;;;3507:4;3485:7;:19;3493:10;3485:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3572:10;3588;3572:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3572:27:1;;;;;;;;;;;;;;;;;;;;;;3702:10;3690:31;3714:6;3690:31;;;;;;;;;;;;;;;;;;3032:699;;:::o;12334:121::-;12397:4;12421:14;:26;12436:10;12421:26;;;;;;;;;;;;;;;;;;;;;12414:33;;12334:121;;;:::o;2103:542:14:-;2150:12;2173:13;2228:43;2257:13;;2228:28;:43::i;:::-;2207:10;;2197:74;;;;;;;;;;;;;;2286:7;2282:356;;;2339:41;2368:11;;2339:28;:41::i;:::-;2320:8;;2310:70;;;;;;;;;;;;;;2399:7;2395:232;;;2442:10;;2431:8;;:21;2427:85;;;2488:4;2477:8;;:15;;;;;;;;;;;;;;;;;;2427:85;2546:4;2530:13;;:20;;;;;;;;;;;;;;;;;;2574:37;2590:10;;2602:8;;2574:37;;;;;;;;;;;;;;;;;;;;;;;;2395:232;2282:356;2103:542;;:::o;333:28:3:-;;;;;;;;;;;;;:::o;365:25:14:-;;;;;;;;;;;;;:::o;10120:112:1:-;10181:4;10205:7;:19;10213:10;10205:19;;;;;;;;;;;;;;;;;;;;;10198:26;;10120:112;;;:::o;5349:206:3:-;5437:5;;;;;;;;;;;5423:19;;:10;:19;;;5415:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5533:13;5499:18;;:48;;;;;;;;;;;;;;;;;;5349:206;:::o;10956:102:1:-;11004:16;11040:10;11033:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10956:102;:::o;12012:115::-;12064:16;12100:19;12093:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12012:115;:::o;1251:25::-;;;;:::o;338:20:14:-;;;;;;;;;;;;;:::o;2324:265:3:-;2437:16;2455:14;2471:27;2523:18;;;;;;;;;;;:34;;;2558:10;2570;2523:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2523:58:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2523:58:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2523:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:65;;;;;;2324:265;;;;;:::o;11450:148:1:-;11524:16;11560:18;:30;11579:10;11560:30;;;;;;;;;;;11553:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11450:148;;;:::o;8152:159::-;8217:5;;;;;;;;;;;8203:19;;:10;:19;;;8195:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8265:5;;;;;;;;;;;8257:23;;:46;8289:4;8281:21;;;8257:46;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8257:46:1;8152:159::o;9385:143::-;9458:13;9491:17;:29;9509:10;9491:29;;;;;;;;;;;;9484:36;;9385:143;;;:::o;5659:215:3:-;5755:5;;;;;;;;;;;5741:19;;:10;:19;;;5733:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:38;5821:5;;;;;;;;;;;5828:9;5800:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5857:9;5849:5;;:17;;;;;;;;;;;;;;;;;;5659:215;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../Optimistic.sol\";\r\n/**\r\n* @title Reader\r\n* This contracts is a pretend contract using Tellor that compares two time values\r\n*/\r\ncontract TestContract is Optimistic {\r\n    uint256 public startDateTime;\r\n    uint256 public endDateTime;\r\n    uint256 public startValue;\r\n    uint256 public endValue;\r\n    bool public longWins;\r\n    bool public contractEnded;\r\n    event ContractSettled(uint256 _svalue, uint256 _evalue);\r\n    /**\r\n    * @dev This constructor function is used to pass variables to the optimistic contract's constructor\r\n    * and the function is blank\r\n    * @param _userContract address for UserContract\r\n    * @param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n    * @param _disputePeriod is the time frame a value can be disputed after being imputed\r\n    * @param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\n    * It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\n    * System be sure to create some.\r\n    * @param _granularity is the amount of decimals desired on the requested value\r\n    */\r\n    constructor(address _userContract, uint256 _disputeFeeRequired, uint256 _disputePeriod, uint256[] memory _requestIds, uint256 _granularity)\r\n        public\r\n        Optimistic(_userContract, _disputeFeeRequired, _disputePeriod, _requestIds, _granularity)\r\n    {}\r\n\r\n    /**\r\n    * @dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n    * @param _duration in seconds\r\n    */\r\n    function setContractDetails(uint256 _duration) external {\r\n        startDateTime = now - (now % granularity);\r\n        endDateTime = now - (now % granularity) + _duration;\r\n    }\r\n\r\n    /**\r\n    * @dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\n    * and the first undisputed value after the end time of the contract and settleling(payin off) it.\r\n    */\r\n    function settleContracts() external {\r\n        bool _didGet;\r\n        uint256 _time;\r\n        (_didGet, startValue, _time) = getFirstUndisputedValueAfter(startDateTime);\r\n        if (_didGet) {\r\n            (_didGet, endValue, _time) = getFirstUndisputedValueAfter(endDateTime);\r\n            if (_didGet) {\r\n                if (endValue > startValue) {\r\n                    longWins = true;\r\n                }\r\n                contractEnded = true;\r\n                emit ContractSettled(startValue, endValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
  "ast": {
    "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4431
      ]
    },
    "id": 4432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4309,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4310,
        "nodeType": "ImportDirective",
        "scope": 4432,
        "sourceUnit": 657,
        "src": "27:27:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4311,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "190:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$656",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4312,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:14"
          }
        ],
        "contractDependencies": [
          1353,
          656
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 4431,
        "linearizedBaseContracts": [
          4431,
          656,
          1353
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4314,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "208:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4313,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4316,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "243:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4315,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4318,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "276:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4317,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4320,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "308:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4319,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4322,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "338:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4321,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "338:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4324,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "365:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4323,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4330,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4326,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4330,
                  "src": "419:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4328,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4330,
                  "src": "436:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:34:14"
            },
            "src": "397:56:14"
          },
          {
            "body": {
              "id": 4351,
              "nodeType": "Block",
              "src": "1502:2:14",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 4352,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4344,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4332,
                    "src": "1418:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4345,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4334,
                    "src": "1433:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4346,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4336,
                    "src": "1454:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4347,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4339,
                    "src": "1470:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4348,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4341,
                    "src": "1483:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4349,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4343,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 656,
                  "src": "1407:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$656_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:89:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4332,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1254:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4334,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1277:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4336,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1306:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4339,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1330:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1330:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4338,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1330:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4341,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1360:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:128:14"
            },
            "returnParameters": {
              "id": 4350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:14"
            },
            "scope": 4431,
            "src": "1242:262:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4377,
              "nodeType": "Block",
              "src": "1736:122:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4357,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4314,
                      "src": "1747:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4358,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "1763:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4359,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4448,
                              "src": "1770:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4360,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1776:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1770:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4362,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1769:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1763:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1747:41:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4365,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:41:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4366,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4316,
                      "src": "1799:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4367,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4448,
                          "src": "1813:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4368,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4448,
                                "src": "1820:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4369,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1826:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1820:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4371,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1819:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1813:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4373,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "1841:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1799:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4376,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:51:14"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 4378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4354,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4378,
                  "src": "1708:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1707:19:14"
            },
            "returnParameters": {
              "id": 4356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:14"
            },
            "scope": 4431,
            "src": "1680:178:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4429,
              "nodeType": "Block",
              "src": "2139:506:14",
              "statements": [
                {
                  "assignments": [
                    4382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4382,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4429,
                      "src": "2150:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4381,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2150:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4383,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:12:14"
                },
                {
                  "assignments": [
                    4385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4385,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4429,
                      "src": "2173:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4386,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2173:13:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4387,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4382,
                          "src": "2198:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4388,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4318,
                          "src": "2207:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4389,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "2219:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4390,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2197:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4392,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4314,
                          "src": "2257:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4391,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2228:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2228:43:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2197:74:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4395,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:74:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4396,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4382,
                    "src": "2286:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4428,
                  "nodeType": "IfStatement",
                  "src": "2282:356:14",
                  "trueBody": {
                    "id": 4427,
                    "nodeType": "Block",
                    "src": "2295:343:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4397,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4382,
                                "src": "2311:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4398,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4320,
                                "src": "2320:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4399,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4385,
                                "src": "2330:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4400,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2310:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4402,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4316,
                                "src": "2368:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4401,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2339:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2339:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2310:70:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4405,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:70:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4406,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4382,
                          "src": "2399:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4426,
                        "nodeType": "IfStatement",
                        "src": "2395:232:14",
                        "trueBody": {
                          "id": 4425,
                          "nodeType": "Block",
                          "src": "2408:219:14",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4407,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4320,
                                  "src": "2431:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4408,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4318,
                                  "src": "2442:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2431:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4415,
                              "nodeType": "IfStatement",
                              "src": "2427:85:14",
                              "trueBody": {
                                "id": 4414,
                                "nodeType": "Block",
                                "src": "2454:58:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4410,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4322,
                                        "src": "2477:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4411,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2488:4:14",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2477:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4413,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2477:15:14"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4416,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4324,
                                  "src": "2530:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2546:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2530:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4419,
                              "nodeType": "ExpressionStatement",
                              "src": "2530:20:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4421,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4318,
                                    "src": "2590:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4422,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4320,
                                    "src": "2602:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4420,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4330,
                                  "src": "2574:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2574:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4424,
                              "nodeType": "EmitStatement",
                              "src": "2569:42:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 4430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:14"
            },
            "returnParameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:14"
            },
            "scope": 4431,
            "src": "2103:542:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4432,
        "src": "165:2483:14"
      }
    ],
    "src": "0:2650:14"
  },
  "legacyAST": {
    "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4431
      ]
    },
    "id": 4432,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4309,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/C/users/lloya/documents/dda/1tellor/tellor/projects/tellornpm/usingtellor/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4310,
        "nodeType": "ImportDirective",
        "scope": 4432,
        "sourceUnit": 657,
        "src": "27:27:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4311,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "190:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$656",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4312,
            "nodeType": "InheritanceSpecifier",
            "src": "190:10:14"
          }
        ],
        "contractDependencies": [
          1353,
          656
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 4431,
        "linearizedBaseContracts": [
          4431,
          656,
          1353
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4314,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "208:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4313,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "208:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4316,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "243:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4315,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4318,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "276:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4317,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4320,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "308:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4319,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4322,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "338:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4321,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "338:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4324,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4431,
            "src": "365:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4323,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4330,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4326,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4330,
                  "src": "419:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4328,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4330,
                  "src": "436:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:34:14"
            },
            "src": "397:56:14"
          },
          {
            "body": {
              "id": 4351,
              "nodeType": "Block",
              "src": "1502:2:14",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 4352,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4344,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4332,
                    "src": "1418:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4345,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4334,
                    "src": "1433:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4346,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4336,
                    "src": "1454:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4347,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4339,
                    "src": "1470:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4348,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4341,
                    "src": "1483:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4349,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4343,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 656,
                  "src": "1407:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$656_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:89:14"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4332,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1254:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4334,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1277:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4336,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1306:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4339,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1330:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4337,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1330:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4338,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1330:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4341,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4352,
                  "src": "1360:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1253:128:14"
            },
            "returnParameters": {
              "id": 4350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:14"
            },
            "scope": 4431,
            "src": "1242:262:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4377,
              "nodeType": "Block",
              "src": "1736:122:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4357,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4314,
                      "src": "1747:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4358,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "1763:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4359,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4448,
                              "src": "1770:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4360,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "1776:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1770:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4362,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1769:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1763:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1747:41:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4365,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:41:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4366,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4316,
                      "src": "1799:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4367,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4448,
                          "src": "1813:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4368,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4448,
                                "src": "1820:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4369,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "1826:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1820:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4371,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1819:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1813:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4373,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4354,
                        "src": "1841:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1813:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1799:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4376,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:51:14"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 4378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4354,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4378,
                  "src": "1708:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1707:19:14"
            },
            "returnParameters": {
              "id": 4356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:14"
            },
            "scope": 4431,
            "src": "1680:178:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4429,
              "nodeType": "Block",
              "src": "2139:506:14",
              "statements": [
                {
                  "assignments": [
                    4382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4382,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4429,
                      "src": "2150:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4381,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2150:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4383,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2150:12:14"
                },
                {
                  "assignments": [
                    4385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4385,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4429,
                      "src": "2173:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2173:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4386,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2173:13:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4387,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4382,
                          "src": "2198:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4388,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4318,
                          "src": "2207:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4389,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4385,
                          "src": "2219:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4390,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2197:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4392,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4314,
                          "src": "2257:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4391,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "2228:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2228:43:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2197:74:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4395,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:74:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4396,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4382,
                    "src": "2286:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4428,
                  "nodeType": "IfStatement",
                  "src": "2282:356:14",
                  "trueBody": {
                    "id": 4427,
                    "nodeType": "Block",
                    "src": "2295:343:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4397,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4382,
                                "src": "2311:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4398,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4320,
                                "src": "2320:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4399,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4385,
                                "src": "2330:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4400,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2310:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4402,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4316,
                                "src": "2368:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4401,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2339:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2339:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2310:70:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4405,
                        "nodeType": "ExpressionStatement",
                        "src": "2310:70:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4406,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4382,
                          "src": "2399:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4426,
                        "nodeType": "IfStatement",
                        "src": "2395:232:14",
                        "trueBody": {
                          "id": 4425,
                          "nodeType": "Block",
                          "src": "2408:219:14",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4407,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4320,
                                  "src": "2431:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4408,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4318,
                                  "src": "2442:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2431:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4415,
                              "nodeType": "IfStatement",
                              "src": "2427:85:14",
                              "trueBody": {
                                "id": 4414,
                                "nodeType": "Block",
                                "src": "2454:58:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4410,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4322,
                                        "src": "2477:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4411,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2488:4:14",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2477:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4413,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2477:15:14"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4416,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4324,
                                  "src": "2530:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2546:4:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2530:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4419,
                              "nodeType": "ExpressionStatement",
                              "src": "2530:20:14"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4421,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4318,
                                    "src": "2590:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4422,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4320,
                                    "src": "2602:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4420,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4330,
                                  "src": "2574:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2574:37:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4424,
                              "nodeType": "EmitStatement",
                              "src": "2569:42:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 4430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:2:14"
            },
            "returnParameters": {
              "id": 4380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:14"
            },
            "scope": 4431,
            "src": "2103:542:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4432,
        "src": "165:2483:14"
      }
    ],
    "src": "0:2650:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-12-02T14:09:37.085Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes\r",
        "params": {
          "_requestId": "to tip\r",
          "_tip": "amount\r"
        }
      },
      "addTipWithEther(uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\r at the price specified by the userContract owner.\r",
        "params": {
          "_requestId": "to tip\r"
        }
      },
      "constructor": {
        "details": "This constructor function is used to pass variables to the optimistic contract's constructor\r and the function is blank\r",
        "params": {
          "_disputeFeeRequired": "the fee to dispute the optimistic price(price sumbitted by known trusted party)\r",
          "_disputePeriod": "is the time frame a value can be disputed after being imputed\r",
          "_granularity": "is the amount of decimals desired on the requested value\r",
          "_requestIds": "are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\r System be sure to create some.\r",
          "_userContract": "address for UserContract\r"
        }
      },
      "disputeOptimisticValue(uint256)": {
        "details": "allows user to initiate dispute on the value of the specified timestamp\r",
        "params": {
          "_timestamp": "is the timestamp for the value to be disputed\r"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getCurrentValue()": {
        "details": "Getter function for latest value available\r",
        "return": "latest value available\r"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getDisputedValueByIndex(uint256)": {
        "details": "Getter function for the dispute value by index\r",
        "return": "the value\r"
      },
      "getDisputedValues()": {
        "details": "Getter function for all disputed values\r",
        "return": "the array with all values under dispute\r"
      },
      "getFirstUndisputedValueAfter(uint256)": {
        "details": "Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\r but can be used on its own.\r",
        "params": {
          "_timestamp": "to search the first undisputed value there after\r"
        }
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\r which it searched for the first verified value\r"
      },
      "getIsValue(uint256)": {
        "details": "Checks to if a value exists for the specifived timestamp\r",
        "params": {
          "_timestamp": "to verify\r"
        },
        "return": "ture if it exists\r"
      },
      "getMyValuesByTimestamp(uint256)": {
        "details": "Getter function for the value based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive value from\r"
        }
      },
      "getNumberOfDisputedValues()": {
        "details": "Getter function for the number of disputed values\r",
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getNumberOfValuesPerTimestamp(uint256)": {
        "details": "Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive number of requestIds\r"
        },
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getRequestIds()": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r",
        "return": "uint array of requests Ids'\r"
      },
      "getRequestIdsIncluded(uint256)": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r at the specified timestamp. This only gets populated after a dispute is initiated and the\r function getTellorValues is ran.\r",
        "params": {
          "_timestamp": "to retreive the requestIds\r"
        },
        "return": "uint array of requests Ids' included in the calcluation of the value\r"
      },
      "getTellorValues(uint256)": {
        "details": "This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the\r requestsIds and replaces the value set by the contract owner, centralized party.\r",
        "params": {
          "_timestamp": "to get Tellor data from\r"
        },
        "return": "uint of new value and true if it was able to get Tellor data\r"
      },
      "getTimestamps()": {
        "details": "Getter function for the timestamps available\r",
        "return": "uint array of timestamps available\r"
      },
      "isDisputed(uint256)": {
        "details": "This checks if the value for the specified timestamp is under dispute\r",
        "params": {
          "_timestamp": "to check if it is under dispute\r"
        },
        "return": "true if it is under dispute\r"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\r users will just go to an exchange and get tokens from there)\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "requestDataWithEther(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "setContractDetails(uint256)": {
        "details": "creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r",
        "params": {
          "_duration": "in seconds\r"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address\r",
        "params": {
          "_userContract": "address\r"
        }
      },
      "setValue(uint256,uint256)": {
        "details": "allows contract owner, a centralized party to enter value\r",
        "params": {
          "_timestamp": "is the timestamp for the value\r",
          "_value": "is the value for the timestamp specified\r"
        }
      },
      "settleContracts()": {
        "details": "testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\r"
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership\r",
        "params": {
          "_newOwner": "address\r"
        }
      },
      "withdrawETH()": {
        "details": "Allows the contract owner(Tellor) to withdraw ETH from this contract\r"
      }
    },
    "title": "Reader\r This contracts is a pretend contract using Tellor that compares two time values\r"
  },
  "userdoc": {
    "methods": {}
  }
}